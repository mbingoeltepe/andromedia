#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MediaLib")]
	public partial class ORMapperDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActorSet(ActorSet instance);
    partial void UpdateActorSet(ActorSet instance);
    partial void DeleteActorSet(ActorSet instance);
    partial void InsertUserSet_Admin(UserSet_Admin instance);
    partial void UpdateUserSet_Admin(UserSet_Admin instance);
    partial void DeleteUserSet_Admin(UserSet_Admin instance);
    partial void InsertActorVideo(ActorVideo instance);
    partial void UpdateActorVideo(ActorVideo instance);
    partial void DeleteActorVideo(ActorVideo instance);
    partial void InsertAuthorSet(AuthorSet instance);
    partial void UpdateAuthorSet(AuthorSet instance);
    partial void DeleteAuthorSet(AuthorSet instance);
    partial void InsertBookQuoteBook(BookQuoteBook instance);
    partial void UpdateBookQuoteBook(BookQuoteBook instance);
    partial void DeleteBookQuoteBook(BookQuoteBook instance);
    partial void InsertBorrowedDetailsSet(BorrowedDetailsSet instance);
    partial void UpdateBorrowedDetailsSet(BorrowedDetailsSet instance);
    partial void DeleteBorrowedDetailsSet(BorrowedDetailsSet instance);
    partial void InsertEpisodeSet(EpisodeSet instance);
    partial void UpdateEpisodeSet(EpisodeSet instance);
    partial void DeleteEpisodeSet(EpisodeSet instance);
    partial void InsertMediaSet(MediaSet instance);
    partial void UpdateMediaSet(MediaSet instance);
    partial void DeleteMediaSet(MediaSet instance);
    partial void InsertMediaSet_Book(MediaSet_Book instance);
    partial void UpdateMediaSet_Book(MediaSet_Book instance);
    partial void DeleteMediaSet_Book(MediaSet_Book instance);
    partial void InsertMediaSet_Movie(MediaSet_Movie instance);
    partial void UpdateMediaSet_Movie(MediaSet_Movie instance);
    partial void DeleteMediaSet_Movie(MediaSet_Movie instance);
    partial void InsertMediaSet_TV_Show(MediaSet_TV_Show instance);
    partial void UpdateMediaSet_TV_Show(MediaSet_TV_Show instance);
    partial void DeleteMediaSet_TV_Show(MediaSet_TV_Show instance);
    partial void InsertMediaSet_Video(MediaSet_Video instance);
    partial void UpdateMediaSet_Video(MediaSet_Video instance);
    partial void DeleteMediaSet_Video(MediaSet_Video instance);
    partial void InsertQuoteMovieMovie(QuoteMovieMovie instance);
    partial void UpdateQuoteMovieMovie(QuoteMovieMovie instance);
    partial void DeleteQuoteMovieMovie(QuoteMovieMovie instance);
    partial void InsertQuoteRankingSet(QuoteRankingSet instance);
    partial void UpdateQuoteRankingSet(QuoteRankingSet instance);
    partial void DeleteQuoteRankingSet(QuoteRankingSet instance);
    partial void InsertQuoteSet(QuoteSet instance);
    partial void UpdateQuoteSet(QuoteSet instance);
    partial void DeleteQuoteSet(QuoteSet instance);
    partial void InsertQuoteSet_QuoteBook(QuoteSet_QuoteBook instance);
    partial void UpdateQuoteSet_QuoteBook(QuoteSet_QuoteBook instance);
    partial void DeleteQuoteSet_QuoteBook(QuoteSet_QuoteBook instance);
    partial void InsertQuoteSet_QuoteMovie(QuoteSet_QuoteMovie instance);
    partial void UpdateQuoteSet_QuoteMovie(QuoteSet_QuoteMovie instance);
    partial void DeleteQuoteSet_QuoteMovie(QuoteSet_QuoteMovie instance);
    partial void InsertQuoteSet_QuoteTV_Show(QuoteSet_QuoteTV_Show instance);
    partial void UpdateQuoteSet_QuoteTV_Show(QuoteSet_QuoteTV_Show instance);
    partial void DeleteQuoteSet_QuoteTV_Show(QuoteSet_QuoteTV_Show instance);
    partial void InsertQuoteTV_ShowEpisode(QuoteTV_ShowEpisode instance);
    partial void UpdateQuoteTV_ShowEpisode(QuoteTV_ShowEpisode instance);
    partial void DeleteQuoteTV_ShowEpisode(QuoteTV_ShowEpisode instance);
    partial void InsertRequestSet(RequestSet instance);
    partial void UpdateRequestSet(RequestSet instance);
    partial void DeleteRequestSet(RequestSet instance);
    partial void InsertRequestUserMedia(RequestUserMedia instance);
    partial void UpdateRequestUserMedia(RequestUserMedia instance);
    partial void DeleteRequestUserMedia(RequestUserMedia instance);
    partial void InsertSeasonSet(SeasonSet instance);
    partial void UpdateSeasonSet(SeasonSet instance);
    partial void DeleteSeasonSet(SeasonSet instance);
    partial void InsertUserFriend(UserFriend instance);
    partial void UpdateUserFriend(UserFriend instance);
    partial void DeleteUserFriend(UserFriend instance);
    partial void InsertUserMediaSet(UserMediaSet instance);
    partial void UpdateUserMediaSet(UserMediaSet instance);
    partial void DeleteUserMediaSet(UserMediaSet instance);
    partial void InsertUserMediaSet_UserBook(UserMediaSet_UserBook instance);
    partial void UpdateUserMediaSet_UserBook(UserMediaSet_UserBook instance);
    partial void DeleteUserMediaSet_UserBook(UserMediaSet_UserBook instance);
    partial void InsertUserMediaSet_UserVideo(UserMediaSet_UserVideo instance);
    partial void UpdateUserMediaSet_UserVideo(UserMediaSet_UserVideo instance);
    partial void DeleteUserMediaSet_UserVideo(UserMediaSet_UserVideo instance);
    partial void InsertUserSet(UserSet instance);
    partial void UpdateUserSet(UserSet instance);
    partial void DeleteUserSet(UserSet instance);
    #endregion
		
		public ORMapperDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MediaLibConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ORMapperDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMapperDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMapperDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMapperDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActorSet> ActorSets
		{
			get
			{
				return this.GetTable<ActorSet>();
			}
		}
		
		public System.Data.Linq.Table<UserSet_Admin> UserSet_Admins
		{
			get
			{
				return this.GetTable<UserSet_Admin>();
			}
		}
		
		public System.Data.Linq.Table<ActorVideo> ActorVideos
		{
			get
			{
				return this.GetTable<ActorVideo>();
			}
		}
		
		public System.Data.Linq.Table<AuthorSet> AuthorSets
		{
			get
			{
				return this.GetTable<AuthorSet>();
			}
		}
		
		public System.Data.Linq.Table<BookQuoteBook> BookQuoteBooks
		{
			get
			{
				return this.GetTable<BookQuoteBook>();
			}
		}
		
		public System.Data.Linq.Table<BorrowedDetailsSet> BorrowedDetailsSets
		{
			get
			{
				return this.GetTable<BorrowedDetailsSet>();
			}
		}
		
		public System.Data.Linq.Table<EpisodeSet> EpisodeSets
		{
			get
			{
				return this.GetTable<EpisodeSet>();
			}
		}
		
		public System.Data.Linq.Table<MediaSet> MediaSets
		{
			get
			{
				return this.GetTable<MediaSet>();
			}
		}
		
		public System.Data.Linq.Table<MediaSet_Book> MediaSet_Books
		{
			get
			{
				return this.GetTable<MediaSet_Book>();
			}
		}
		
		public System.Data.Linq.Table<MediaSet_Movie> MediaSet_Movies
		{
			get
			{
				return this.GetTable<MediaSet_Movie>();
			}
		}
		
		public System.Data.Linq.Table<MediaSet_TV_Show> MediaSet_TV_Shows
		{
			get
			{
				return this.GetTable<MediaSet_TV_Show>();
			}
		}
		
		public System.Data.Linq.Table<MediaSet_Video> MediaSet_Videos
		{
			get
			{
				return this.GetTable<MediaSet_Video>();
			}
		}
		
		public System.Data.Linq.Table<QuoteMovieMovie> QuoteMovieMovies
		{
			get
			{
				return this.GetTable<QuoteMovieMovie>();
			}
		}
		
		public System.Data.Linq.Table<QuoteRankingSet> QuoteRankingSets
		{
			get
			{
				return this.GetTable<QuoteRankingSet>();
			}
		}
		
		public System.Data.Linq.Table<QuoteSet> QuoteSets
		{
			get
			{
				return this.GetTable<QuoteSet>();
			}
		}
		
		public System.Data.Linq.Table<QuoteSet_QuoteBook> QuoteSet_QuoteBooks
		{
			get
			{
				return this.GetTable<QuoteSet_QuoteBook>();
			}
		}
		
		public System.Data.Linq.Table<QuoteSet_QuoteMovie> QuoteSet_QuoteMovies
		{
			get
			{
				return this.GetTable<QuoteSet_QuoteMovie>();
			}
		}
		
		public System.Data.Linq.Table<QuoteSet_QuoteTV_Show> QuoteSet_QuoteTV_Shows
		{
			get
			{
				return this.GetTable<QuoteSet_QuoteTV_Show>();
			}
		}
		
		public System.Data.Linq.Table<QuoteTV_ShowEpisode> QuoteTV_ShowEpisodes
		{
			get
			{
				return this.GetTable<QuoteTV_ShowEpisode>();
			}
		}
		
		public System.Data.Linq.Table<RequestSet> RequestSets
		{
			get
			{
				return this.GetTable<RequestSet>();
			}
		}
		
		public System.Data.Linq.Table<RequestUserMedia> RequestUserMedias
		{
			get
			{
				return this.GetTable<RequestUserMedia>();
			}
		}
		
		public System.Data.Linq.Table<SeasonSet> SeasonSets
		{
			get
			{
				return this.GetTable<SeasonSet>();
			}
		}
		
		public System.Data.Linq.Table<UserFriend> UserFriends
		{
			get
			{
				return this.GetTable<UserFriend>();
			}
		}
		
		public System.Data.Linq.Table<UserMediaSet> UserMediaSets
		{
			get
			{
				return this.GetTable<UserMediaSet>();
			}
		}
		
		public System.Data.Linq.Table<UserMediaSet_UserBook> UserMediaSet_UserBooks
		{
			get
			{
				return this.GetTable<UserMediaSet_UserBook>();
			}
		}
		
		public System.Data.Linq.Table<UserMediaSet_UserVideo> UserMediaSet_UserVideos
		{
			get
			{
				return this.GetTable<UserMediaSet_UserVideo>();
			}
		}
		
		public System.Data.Linq.Table<UserSet> UserSets
		{
			get
			{
				return this.GetTable<UserSet>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActorSet")]
	public partial class ActorSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private EntitySet<ActorVideo> _ActorVideos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public ActorSet()
		{
			this._ActorVideos = new EntitySet<ActorVideo>(new Action<ActorVideo>(this.attach_ActorVideos), new Action<ActorVideo>(this.detach_ActorVideos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActorSet_ActorVideo", Storage="_ActorVideos", ThisKey="Id", OtherKey="Actor_Id")]
		public EntitySet<ActorVideo> ActorVideos
		{
			get
			{
				return this._ActorVideos;
			}
			set
			{
				this._ActorVideos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActorVideos(ActorVideo entity)
		{
			this.SendPropertyChanging();
			entity.ActorSet = this;
		}
		
		private void detach_ActorVideos(ActorVideo entity)
		{
			this.SendPropertyChanging();
			entity.ActorSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSet_Admin")]
	public partial class UserSet_Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private EntityRef<UserSet> _UserSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public UserSet_Admin()
		{
			this._UserSet = default(EntityRef<UserSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._UserSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_UserSet_Admin", Storage="_UserSet", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public UserSet UserSet
		{
			get
			{
				return this._UserSet.Entity;
			}
			set
			{
				UserSet previousValue = this._UserSet.Entity;
				if (((previousValue != value) 
							|| (this._UserSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserSet.Entity = null;
						previousValue.UserSet_Admin = null;
					}
					this._UserSet.Entity = value;
					if ((value != null))
					{
						value.UserSet_Admin = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("UserSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActorVideo")]
	public partial class ActorVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Actor_Id;
		
		private int _Video_Id;
		
		private EntityRef<ActorSet> _ActorSet;
		
		private EntityRef<MediaSet_Video> _MediaSet_Video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActor_IdChanging(int value);
    partial void OnActor_IdChanged();
    partial void OnVideo_IdChanging(int value);
    partial void OnVideo_IdChanged();
    #endregion
		
		public ActorVideo()
		{
			this._ActorSet = default(EntityRef<ActorSet>);
			this._MediaSet_Video = default(EntityRef<MediaSet_Video>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actor_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Actor_Id
		{
			get
			{
				return this._Actor_Id;
			}
			set
			{
				if ((this._Actor_Id != value))
				{
					if (this._ActorSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActor_IdChanging(value);
					this.SendPropertyChanging();
					this._Actor_Id = value;
					this.SendPropertyChanged("Actor_Id");
					this.OnActor_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Video_Id
		{
			get
			{
				return this._Video_Id;
			}
			set
			{
				if ((this._Video_Id != value))
				{
					if (this._MediaSet_Video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideo_IdChanging(value);
					this.SendPropertyChanging();
					this._Video_Id = value;
					this.SendPropertyChanged("Video_Id");
					this.OnVideo_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActorSet_ActorVideo", Storage="_ActorSet", ThisKey="Actor_Id", OtherKey="Id", IsForeignKey=true)]
		public ActorSet ActorSet
		{
			get
			{
				return this._ActorSet.Entity;
			}
			set
			{
				ActorSet previousValue = this._ActorSet.Entity;
				if (((previousValue != value) 
							|| (this._ActorSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActorSet.Entity = null;
						previousValue.ActorVideos.Remove(this);
					}
					this._ActorSet.Entity = value;
					if ((value != null))
					{
						value.ActorVideos.Add(this);
						this._Actor_Id = value.Id;
					}
					else
					{
						this._Actor_Id = default(int);
					}
					this.SendPropertyChanged("ActorSet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Video_ActorVideo", Storage="_MediaSet_Video", ThisKey="Video_Id", OtherKey="Id", IsForeignKey=true)]
		public MediaSet_Video MediaSet_Video
		{
			get
			{
				return this._MediaSet_Video.Entity;
			}
			set
			{
				MediaSet_Video previousValue = this._MediaSet_Video.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Video.Entity = null;
						previousValue.ActorVideos.Remove(this);
					}
					this._MediaSet_Video.Entity = value;
					if ((value != null))
					{
						value.ActorVideos.Add(this);
						this._Video_Id = value.Id;
					}
					else
					{
						this._Video_Id = default(int);
					}
					this.SendPropertyChanged("MediaSet_Video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorSet")]
	public partial class AuthorSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private EntitySet<MediaSet_Book> _MediaSet_Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public AuthorSet()
		{
			this._MediaSet_Books = new EntitySet<MediaSet_Book>(new Action<MediaSet_Book>(this.attach_MediaSet_Books), new Action<MediaSet_Book>(this.detach_MediaSet_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuthorSet_MediaSet_Book", Storage="_MediaSet_Books", ThisKey="Id", OtherKey="AuthorId")]
		public EntitySet<MediaSet_Book> MediaSet_Books
		{
			get
			{
				return this._MediaSet_Books;
			}
			set
			{
				this._MediaSet_Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MediaSet_Books(MediaSet_Book entity)
		{
			this.SendPropertyChanging();
			entity.AuthorSet = this;
		}
		
		private void detach_MediaSet_Books(MediaSet_Book entity)
		{
			this.SendPropertyChanging();
			entity.AuthorSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookQuoteBook")]
	public partial class BookQuoteBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Book_Id;
		
		private int _QuoteBook_Id;
		
		private EntityRef<MediaSet_Book> _MediaSet_Book;
		
		private EntityRef<QuoteSet_QuoteBook> _QuoteSet_QuoteBook;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBook_IdChanging(int value);
    partial void OnBook_IdChanged();
    partial void OnQuoteBook_IdChanging(int value);
    partial void OnQuoteBook_IdChanged();
    #endregion
		
		public BookQuoteBook()
		{
			this._MediaSet_Book = default(EntityRef<MediaSet_Book>);
			this._QuoteSet_QuoteBook = default(EntityRef<QuoteSet_QuoteBook>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Book_Id
		{
			get
			{
				return this._Book_Id;
			}
			set
			{
				if ((this._Book_Id != value))
				{
					if (this._MediaSet_Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBook_IdChanging(value);
					this.SendPropertyChanging();
					this._Book_Id = value;
					this.SendPropertyChanged("Book_Id");
					this.OnBook_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteBook_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuoteBook_Id
		{
			get
			{
				return this._QuoteBook_Id;
			}
			set
			{
				if ((this._QuoteBook_Id != value))
				{
					if (this._QuoteSet_QuoteBook.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteBook_IdChanging(value);
					this.SendPropertyChanging();
					this._QuoteBook_Id = value;
					this.SendPropertyChanged("QuoteBook_Id");
					this.OnQuoteBook_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Book_BookQuoteBook", Storage="_MediaSet_Book", ThisKey="Book_Id", OtherKey="Id", IsForeignKey=true)]
		public MediaSet_Book MediaSet_Book
		{
			get
			{
				return this._MediaSet_Book.Entity;
			}
			set
			{
				MediaSet_Book previousValue = this._MediaSet_Book.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Book.Entity = null;
						previousValue.BookQuoteBooks.Remove(this);
					}
					this._MediaSet_Book.Entity = value;
					if ((value != null))
					{
						value.BookQuoteBooks.Add(this);
						this._Book_Id = value.Id;
					}
					else
					{
						this._Book_Id = default(int);
					}
					this.SendPropertyChanged("MediaSet_Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteBook_BookQuoteBook", Storage="_QuoteSet_QuoteBook", ThisKey="QuoteBook_Id", OtherKey="Id", IsForeignKey=true)]
		public QuoteSet_QuoteBook QuoteSet_QuoteBook
		{
			get
			{
				return this._QuoteSet_QuoteBook.Entity;
			}
			set
			{
				QuoteSet_QuoteBook previousValue = this._QuoteSet_QuoteBook.Entity;
				if (((previousValue != value) 
							|| (this._QuoteSet_QuoteBook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteSet_QuoteBook.Entity = null;
						previousValue.BookQuoteBooks.Remove(this);
					}
					this._QuoteSet_QuoteBook.Entity = value;
					if ((value != null))
					{
						value.BookQuoteBooks.Add(this);
						this._QuoteBook_Id = value.Id;
					}
					else
					{
						this._QuoteBook_Id = default(int);
					}
					this.SendPropertyChanged("QuoteSet_QuoteBook");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BorrowedDetailsSet")]
	public partial class BorrowedDetailsSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private int _UserId;
		
		private EntityRef<UserSet> _UserSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public BorrowedDetailsSet()
		{
			this._UserSet = default(EntityRef<UserSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_BorrowedDetailsSet", Storage="_UserSet", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public UserSet UserSet
		{
			get
			{
				return this._UserSet.Entity;
			}
			set
			{
				UserSet previousValue = this._UserSet.Entity;
				if (((previousValue != value) 
							|| (this._UserSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserSet.Entity = null;
						previousValue.BorrowedDetailsSets.Remove(this);
					}
					this._UserSet.Entity = value;
					if ((value != null))
					{
						value.BorrowedDetailsSets.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EpisodeSet")]
	public partial class EpisodeSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _SeasonId;
		
		private EntitySet<QuoteTV_ShowEpisode> _QuoteTV_ShowEpisodes;
		
		private EntityRef<SeasonSet> _SeasonSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSeasonIdChanging(int value);
    partial void OnSeasonIdChanged();
    #endregion
		
		public EpisodeSet()
		{
			this._QuoteTV_ShowEpisodes = new EntitySet<QuoteTV_ShowEpisode>(new Action<QuoteTV_ShowEpisode>(this.attach_QuoteTV_ShowEpisodes), new Action<QuoteTV_ShowEpisode>(this.detach_QuoteTV_ShowEpisodes));
			this._SeasonSet = default(EntityRef<SeasonSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonId", DbType="Int NOT NULL")]
		public int SeasonId
		{
			get
			{
				return this._SeasonId;
			}
			set
			{
				if ((this._SeasonId != value))
				{
					if (this._SeasonSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeasonIdChanging(value);
					this.SendPropertyChanging();
					this._SeasonId = value;
					this.SendPropertyChanged("SeasonId");
					this.OnSeasonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EpisodeSet_QuoteTV_ShowEpisode", Storage="_QuoteTV_ShowEpisodes", ThisKey="Id", OtherKey="Episode_Id")]
		public EntitySet<QuoteTV_ShowEpisode> QuoteTV_ShowEpisodes
		{
			get
			{
				return this._QuoteTV_ShowEpisodes;
			}
			set
			{
				this._QuoteTV_ShowEpisodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeasonSet_EpisodeSet", Storage="_SeasonSet", ThisKey="SeasonId", OtherKey="Id", IsForeignKey=true)]
		public SeasonSet SeasonSet
		{
			get
			{
				return this._SeasonSet.Entity;
			}
			set
			{
				SeasonSet previousValue = this._SeasonSet.Entity;
				if (((previousValue != value) 
							|| (this._SeasonSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SeasonSet.Entity = null;
						previousValue.EpisodeSets.Remove(this);
					}
					this._SeasonSet.Entity = value;
					if ((value != null))
					{
						value.EpisodeSets.Add(this);
						this._SeasonId = value.Id;
					}
					else
					{
						this._SeasonId = default(int);
					}
					this.SendPropertyChanged("SeasonSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteTV_ShowEpisodes(QuoteTV_ShowEpisode entity)
		{
			this.SendPropertyChanging();
			entity.EpisodeSet = this;
		}
		
		private void detach_QuoteTV_ShowEpisodes(QuoteTV_ShowEpisode entity)
		{
			this.SendPropertyChanging();
			entity.EpisodeSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaSet")]
	public partial class MediaSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _OriginalTitle;
		
		private System.Nullable<double> _Rating;
		
		private string _Genre;
		
		private System.Data.Linq.Binary _Cover;
		
		private EntityRef<MediaSet_Book> _MediaSet_Book;
		
		private EntityRef<MediaSet_Video> _MediaSet_Video;
		
		private EntitySet<QuoteRankingSet> _QuoteRankingSets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnOriginalTitleChanging(string value);
    partial void OnOriginalTitleChanged();
    partial void OnRatingChanging(System.Nullable<double> value);
    partial void OnRatingChanged();
    partial void OnGenreChanging(string value);
    partial void OnGenreChanged();
    partial void OnCoverChanging(System.Data.Linq.Binary value);
    partial void OnCoverChanged();
    #endregion
		
		public MediaSet()
		{
			this._MediaSet_Book = default(EntityRef<MediaSet_Book>);
			this._MediaSet_Video = default(EntityRef<MediaSet_Video>);
			this._QuoteRankingSets = new EntitySet<QuoteRankingSet>(new Action<QuoteRankingSet>(this.attach_QuoteRankingSets), new Action<QuoteRankingSet>(this.detach_QuoteRankingSets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalTitle", DbType="NVarChar(MAX)")]
		public string OriginalTitle
		{
			get
			{
				return this._OriginalTitle;
			}
			set
			{
				if ((this._OriginalTitle != value))
				{
					this.OnOriginalTitleChanging(value);
					this.SendPropertyChanging();
					this._OriginalTitle = value;
					this.SendPropertyChanged("OriginalTitle");
					this.OnOriginalTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Float")]
		public System.Nullable<double> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genre", DbType="NVarChar(MAX)")]
		public string Genre
		{
			get
			{
				return this._Genre;
			}
			set
			{
				if ((this._Genre != value))
				{
					this.OnGenreChanging(value);
					this.SendPropertyChanging();
					this._Genre = value;
					this.SendPropertyChanged("Genre");
					this.OnGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Cover
		{
			get
			{
				return this._Cover;
			}
			set
			{
				if ((this._Cover != value))
				{
					this.OnCoverChanging(value);
					this.SendPropertyChanging();
					this._Cover = value;
					this.SendPropertyChanged("Cover");
					this.OnCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_MediaSet_Book", Storage="_MediaSet_Book", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public MediaSet_Book MediaSet_Book
		{
			get
			{
				return this._MediaSet_Book.Entity;
			}
			set
			{
				MediaSet_Book previousValue = this._MediaSet_Book.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Book.Entity = null;
						previousValue.MediaSet = null;
					}
					this._MediaSet_Book.Entity = value;
					if ((value != null))
					{
						value.MediaSet = this;
					}
					this.SendPropertyChanged("MediaSet_Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_MediaSet_Video", Storage="_MediaSet_Video", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public MediaSet_Video MediaSet_Video
		{
			get
			{
				return this._MediaSet_Video.Entity;
			}
			set
			{
				MediaSet_Video previousValue = this._MediaSet_Video.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Video.Entity = null;
						previousValue.MediaSet = null;
					}
					this._MediaSet_Video.Entity = value;
					if ((value != null))
					{
						value.MediaSet = this;
					}
					this.SendPropertyChanged("MediaSet_Video");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_QuoteRankingSet", Storage="_QuoteRankingSets", ThisKey="Id", OtherKey="MediaId")]
		public EntitySet<QuoteRankingSet> QuoteRankingSets
		{
			get
			{
				return this._QuoteRankingSets;
			}
			set
			{
				this._QuoteRankingSets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteRankingSets(QuoteRankingSet entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet = this;
		}
		
		private void detach_QuoteRankingSets(QuoteRankingSet entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaSet_Book")]
	public partial class MediaSet_Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Isbn;
		
		private int _AuthorId;
		
		private int _Id;
		
		private EntitySet<BookQuoteBook> _BookQuoteBooks;
		
		private EntitySet<MediaSet_Movie> _MediaSet_Movies;
		
		private EntitySet<UserMediaSet_UserBook> _UserMediaSet_UserBooks;
		
		private EntityRef<AuthorSet> _AuthorSet;
		
		private EntityRef<MediaSet> _MediaSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIsbnChanging(string value);
    partial void OnIsbnChanged();
    partial void OnAuthorIdChanging(int value);
    partial void OnAuthorIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public MediaSet_Book()
		{
			this._BookQuoteBooks = new EntitySet<BookQuoteBook>(new Action<BookQuoteBook>(this.attach_BookQuoteBooks), new Action<BookQuoteBook>(this.detach_BookQuoteBooks));
			this._MediaSet_Movies = new EntitySet<MediaSet_Movie>(new Action<MediaSet_Movie>(this.attach_MediaSet_Movies), new Action<MediaSet_Movie>(this.detach_MediaSet_Movies));
			this._UserMediaSet_UserBooks = new EntitySet<UserMediaSet_UserBook>(new Action<UserMediaSet_UserBook>(this.attach_UserMediaSet_UserBooks), new Action<UserMediaSet_UserBook>(this.detach_UserMediaSet_UserBooks));
			this._AuthorSet = default(EntityRef<AuthorSet>);
			this._MediaSet = default(EntityRef<MediaSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isbn", DbType="NVarChar(MAX)")]
		public string Isbn
		{
			get
			{
				return this._Isbn;
			}
			set
			{
				if ((this._Isbn != value))
				{
					this.OnIsbnChanging(value);
					this.SendPropertyChanging();
					this._Isbn = value;
					this.SendPropertyChanged("Isbn");
					this.OnIsbnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorId", DbType="Int NOT NULL")]
		public int AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					if (this._AuthorSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorId = value;
					this.SendPropertyChanged("AuthorId");
					this.OnAuthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._MediaSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Book_BookQuoteBook", Storage="_BookQuoteBooks", ThisKey="Id", OtherKey="Book_Id")]
		public EntitySet<BookQuoteBook> BookQuoteBooks
		{
			get
			{
				return this._BookQuoteBooks;
			}
			set
			{
				this._BookQuoteBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Book_MediaSet_Movie", Storage="_MediaSet_Movies", ThisKey="Id", OtherKey="Book_Id")]
		public EntitySet<MediaSet_Movie> MediaSet_Movies
		{
			get
			{
				return this._MediaSet_Movies;
			}
			set
			{
				this._MediaSet_Movies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Book_UserMediaSet_UserBook", Storage="_UserMediaSet_UserBooks", ThisKey="Id", OtherKey="BookId")]
		public EntitySet<UserMediaSet_UserBook> UserMediaSet_UserBooks
		{
			get
			{
				return this._UserMediaSet_UserBooks;
			}
			set
			{
				this._UserMediaSet_UserBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuthorSet_MediaSet_Book", Storage="_AuthorSet", ThisKey="AuthorId", OtherKey="Id", IsForeignKey=true)]
		public AuthorSet AuthorSet
		{
			get
			{
				return this._AuthorSet.Entity;
			}
			set
			{
				AuthorSet previousValue = this._AuthorSet.Entity;
				if (((previousValue != value) 
							|| (this._AuthorSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuthorSet.Entity = null;
						previousValue.MediaSet_Books.Remove(this);
					}
					this._AuthorSet.Entity = value;
					if ((value != null))
					{
						value.MediaSet_Books.Add(this);
						this._AuthorId = value.Id;
					}
					else
					{
						this._AuthorId = default(int);
					}
					this.SendPropertyChanged("AuthorSet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_MediaSet_Book", Storage="_MediaSet", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public MediaSet MediaSet
		{
			get
			{
				return this._MediaSet.Entity;
			}
			set
			{
				MediaSet previousValue = this._MediaSet.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet.Entity = null;
						previousValue.MediaSet_Book = null;
					}
					this._MediaSet.Entity = value;
					if ((value != null))
					{
						value.MediaSet_Book = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("MediaSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookQuoteBooks(BookQuoteBook entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Book = this;
		}
		
		private void detach_BookQuoteBooks(BookQuoteBook entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Book = null;
		}
		
		private void attach_MediaSet_Movies(MediaSet_Movie entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Book = this;
		}
		
		private void detach_MediaSet_Movies(MediaSet_Movie entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Book = null;
		}
		
		private void attach_UserMediaSet_UserBooks(UserMediaSet_UserBook entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Book = this;
		}
		
		private void detach_UserMediaSet_UserBooks(UserMediaSet_UserBook entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaSet_Movie")]
	public partial class MediaSet_Movie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _ReleaseDate;
		
		private int _Id;
		
		private System.Nullable<int> _Book_Id;
		
		private EntitySet<QuoteMovieMovie> _QuoteMovieMovies;
		
		private EntityRef<MediaSet_Book> _MediaSet_Book;
		
		private EntityRef<MediaSet_Video> _MediaSet_Video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReleaseDateChanging(System.DateTime value);
    partial void OnReleaseDateChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBook_IdChanging(System.Nullable<int> value);
    partial void OnBook_IdChanged();
    #endregion
		
		public MediaSet_Movie()
		{
			this._QuoteMovieMovies = new EntitySet<QuoteMovieMovie>(new Action<QuoteMovieMovie>(this.attach_QuoteMovieMovies), new Action<QuoteMovieMovie>(this.detach_QuoteMovieMovies));
			this._MediaSet_Book = default(EntityRef<MediaSet_Book>);
			this._MediaSet_Video = default(EntityRef<MediaSet_Video>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReleaseDate
		{
			get
			{
				return this._ReleaseDate;
			}
			set
			{
				if ((this._ReleaseDate != value))
				{
					this.OnReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._ReleaseDate = value;
					this.SendPropertyChanged("ReleaseDate");
					this.OnReleaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._MediaSet_Video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Id", DbType="Int")]
		public System.Nullable<int> Book_Id
		{
			get
			{
				return this._Book_Id;
			}
			set
			{
				if ((this._Book_Id != value))
				{
					if (this._MediaSet_Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBook_IdChanging(value);
					this.SendPropertyChanging();
					this._Book_Id = value;
					this.SendPropertyChanged("Book_Id");
					this.OnBook_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Movie_QuoteMovieMovie", Storage="_QuoteMovieMovies", ThisKey="Id", OtherKey="Movie_Id")]
		public EntitySet<QuoteMovieMovie> QuoteMovieMovies
		{
			get
			{
				return this._QuoteMovieMovies;
			}
			set
			{
				this._QuoteMovieMovies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Book_MediaSet_Movie", Storage="_MediaSet_Book", ThisKey="Book_Id", OtherKey="Id", IsForeignKey=true)]
		public MediaSet_Book MediaSet_Book
		{
			get
			{
				return this._MediaSet_Book.Entity;
			}
			set
			{
				MediaSet_Book previousValue = this._MediaSet_Book.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Book.Entity = null;
						previousValue.MediaSet_Movies.Remove(this);
					}
					this._MediaSet_Book.Entity = value;
					if ((value != null))
					{
						value.MediaSet_Movies.Add(this);
						this._Book_Id = value.Id;
					}
					else
					{
						this._Book_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("MediaSet_Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Video_MediaSet_Movie", Storage="_MediaSet_Video", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public MediaSet_Video MediaSet_Video
		{
			get
			{
				return this._MediaSet_Video.Entity;
			}
			set
			{
				MediaSet_Video previousValue = this._MediaSet_Video.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Video.Entity = null;
						previousValue.MediaSet_Movie = null;
					}
					this._MediaSet_Video.Entity = value;
					if ((value != null))
					{
						value.MediaSet_Movie = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("MediaSet_Video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteMovieMovies(QuoteMovieMovie entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Movie = this;
		}
		
		private void detach_QuoteMovieMovies(QuoteMovieMovie entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Movie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaSet_TV_Show")]
	public partial class MediaSet_TV_Show : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private System.DateTime _ShowBeginning;
		
		private System.DateTime _ShowEnding;
		
		private int _QuoteTV_ShowId;
		
		private int _Id;
		
		private EntitySet<SeasonSet> _SeasonSets;
		
		private EntityRef<MediaSet_Video> _MediaSet_Video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShowBeginningChanging(System.DateTime value);
    partial void OnShowBeginningChanged();
    partial void OnShowEndingChanging(System.DateTime value);
    partial void OnShowEndingChanged();
    partial void OnQuoteTV_ShowIdChanging(int value);
    partial void OnQuoteTV_ShowIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public MediaSet_TV_Show()
		{
			this._SeasonSets = new EntitySet<SeasonSet>(new Action<SeasonSet>(this.attach_SeasonSets), new Action<SeasonSet>(this.detach_SeasonSets));
			this._MediaSet_Video = default(EntityRef<MediaSet_Video>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowBeginning", DbType="DateTime NOT NULL")]
		public System.DateTime ShowBeginning
		{
			get
			{
				return this._ShowBeginning;
			}
			set
			{
				if ((this._ShowBeginning != value))
				{
					this.OnShowBeginningChanging(value);
					this.SendPropertyChanging();
					this._ShowBeginning = value;
					this.SendPropertyChanged("ShowBeginning");
					this.OnShowBeginningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowEnding", DbType="DateTime NOT NULL")]
		public System.DateTime ShowEnding
		{
			get
			{
				return this._ShowEnding;
			}
			set
			{
				if ((this._ShowEnding != value))
				{
					this.OnShowEndingChanging(value);
					this.SendPropertyChanging();
					this._ShowEnding = value;
					this.SendPropertyChanged("ShowEnding");
					this.OnShowEndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteTV_ShowId", DbType="Int NOT NULL")]
		public int QuoteTV_ShowId
		{
			get
			{
				return this._QuoteTV_ShowId;
			}
			set
			{
				if ((this._QuoteTV_ShowId != value))
				{
					this.OnQuoteTV_ShowIdChanging(value);
					this.SendPropertyChanging();
					this._QuoteTV_ShowId = value;
					this.SendPropertyChanged("QuoteTV_ShowId");
					this.OnQuoteTV_ShowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._MediaSet_Video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_TV_Show_SeasonSet", Storage="_SeasonSets", ThisKey="Id", OtherKey="TV_ShowId")]
		public EntitySet<SeasonSet> SeasonSets
		{
			get
			{
				return this._SeasonSets;
			}
			set
			{
				this._SeasonSets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Video_MediaSet_TV_Show", Storage="_MediaSet_Video", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public MediaSet_Video MediaSet_Video
		{
			get
			{
				return this._MediaSet_Video.Entity;
			}
			set
			{
				MediaSet_Video previousValue = this._MediaSet_Video.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Video.Entity = null;
						previousValue.MediaSet_TV_Show = null;
					}
					this._MediaSet_Video.Entity = value;
					if ((value != null))
					{
						value.MediaSet_TV_Show = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("MediaSet_Video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SeasonSets(SeasonSet entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_TV_Show = this;
		}
		
		private void detach_SeasonSets(SeasonSet entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_TV_Show = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaSet_Video")]
	public partial class MediaSet_Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private EntitySet<ActorVideo> _ActorVideos;
		
		private EntityRef<MediaSet_Movie> _MediaSet_Movie;
		
		private EntityRef<MediaSet_TV_Show> _MediaSet_TV_Show;
		
		private EntitySet<UserMediaSet_UserVideo> _UserMediaSet_UserVideos;
		
		private EntityRef<MediaSet> _MediaSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public MediaSet_Video()
		{
			this._ActorVideos = new EntitySet<ActorVideo>(new Action<ActorVideo>(this.attach_ActorVideos), new Action<ActorVideo>(this.detach_ActorVideos));
			this._MediaSet_Movie = default(EntityRef<MediaSet_Movie>);
			this._MediaSet_TV_Show = default(EntityRef<MediaSet_TV_Show>);
			this._UserMediaSet_UserVideos = new EntitySet<UserMediaSet_UserVideo>(new Action<UserMediaSet_UserVideo>(this.attach_UserMediaSet_UserVideos), new Action<UserMediaSet_UserVideo>(this.detach_UserMediaSet_UserVideos));
			this._MediaSet = default(EntityRef<MediaSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._MediaSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Video_ActorVideo", Storage="_ActorVideos", ThisKey="Id", OtherKey="Video_Id")]
		public EntitySet<ActorVideo> ActorVideos
		{
			get
			{
				return this._ActorVideos;
			}
			set
			{
				this._ActorVideos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Video_MediaSet_Movie", Storage="_MediaSet_Movie", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public MediaSet_Movie MediaSet_Movie
		{
			get
			{
				return this._MediaSet_Movie.Entity;
			}
			set
			{
				MediaSet_Movie previousValue = this._MediaSet_Movie.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Movie.Entity = null;
						previousValue.MediaSet_Video = null;
					}
					this._MediaSet_Movie.Entity = value;
					if ((value != null))
					{
						value.MediaSet_Video = this;
					}
					this.SendPropertyChanged("MediaSet_Movie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Video_MediaSet_TV_Show", Storage="_MediaSet_TV_Show", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public MediaSet_TV_Show MediaSet_TV_Show
		{
			get
			{
				return this._MediaSet_TV_Show.Entity;
			}
			set
			{
				MediaSet_TV_Show previousValue = this._MediaSet_TV_Show.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_TV_Show.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_TV_Show.Entity = null;
						previousValue.MediaSet_Video = null;
					}
					this._MediaSet_TV_Show.Entity = value;
					if ((value != null))
					{
						value.MediaSet_Video = this;
					}
					this.SendPropertyChanged("MediaSet_TV_Show");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Video_UserMediaSet_UserVideo", Storage="_UserMediaSet_UserVideos", ThisKey="Id", OtherKey="VideoId")]
		public EntitySet<UserMediaSet_UserVideo> UserMediaSet_UserVideos
		{
			get
			{
				return this._UserMediaSet_UserVideos;
			}
			set
			{
				this._UserMediaSet_UserVideos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_MediaSet_Video", Storage="_MediaSet", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public MediaSet MediaSet
		{
			get
			{
				return this._MediaSet.Entity;
			}
			set
			{
				MediaSet previousValue = this._MediaSet.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet.Entity = null;
						previousValue.MediaSet_Video = null;
					}
					this._MediaSet.Entity = value;
					if ((value != null))
					{
						value.MediaSet_Video = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("MediaSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActorVideos(ActorVideo entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Video = this;
		}
		
		private void detach_ActorVideos(ActorVideo entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Video = null;
		}
		
		private void attach_UserMediaSet_UserVideos(UserMediaSet_UserVideo entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Video = this;
		}
		
		private void detach_UserMediaSet_UserVideos(UserMediaSet_UserVideo entity)
		{
			this.SendPropertyChanging();
			entity.MediaSet_Video = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteMovieMovie")]
	public partial class QuoteMovieMovie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuoteMovie_Id;
		
		private int _Movie_Id;
		
		private EntityRef<MediaSet_Movie> _MediaSet_Movie;
		
		private EntityRef<QuoteSet_QuoteMovie> _QuoteSet_QuoteMovie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuoteMovie_IdChanging(int value);
    partial void OnQuoteMovie_IdChanged();
    partial void OnMovie_IdChanging(int value);
    partial void OnMovie_IdChanged();
    #endregion
		
		public QuoteMovieMovie()
		{
			this._MediaSet_Movie = default(EntityRef<MediaSet_Movie>);
			this._QuoteSet_QuoteMovie = default(EntityRef<QuoteSet_QuoteMovie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteMovie_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuoteMovie_Id
		{
			get
			{
				return this._QuoteMovie_Id;
			}
			set
			{
				if ((this._QuoteMovie_Id != value))
				{
					if (this._QuoteSet_QuoteMovie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteMovie_IdChanging(value);
					this.SendPropertyChanging();
					this._QuoteMovie_Id = value;
					this.SendPropertyChanged("QuoteMovie_Id");
					this.OnQuoteMovie_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movie_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Movie_Id
		{
			get
			{
				return this._Movie_Id;
			}
			set
			{
				if ((this._Movie_Id != value))
				{
					if (this._MediaSet_Movie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMovie_IdChanging(value);
					this.SendPropertyChanging();
					this._Movie_Id = value;
					this.SendPropertyChanged("Movie_Id");
					this.OnMovie_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Movie_QuoteMovieMovie", Storage="_MediaSet_Movie", ThisKey="Movie_Id", OtherKey="Id", IsForeignKey=true)]
		public MediaSet_Movie MediaSet_Movie
		{
			get
			{
				return this._MediaSet_Movie.Entity;
			}
			set
			{
				MediaSet_Movie previousValue = this._MediaSet_Movie.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Movie.Entity = null;
						previousValue.QuoteMovieMovies.Remove(this);
					}
					this._MediaSet_Movie.Entity = value;
					if ((value != null))
					{
						value.QuoteMovieMovies.Add(this);
						this._Movie_Id = value.Id;
					}
					else
					{
						this._Movie_Id = default(int);
					}
					this.SendPropertyChanged("MediaSet_Movie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteMovie_QuoteMovieMovie", Storage="_QuoteSet_QuoteMovie", ThisKey="QuoteMovie_Id", OtherKey="Id", IsForeignKey=true)]
		public QuoteSet_QuoteMovie QuoteSet_QuoteMovie
		{
			get
			{
				return this._QuoteSet_QuoteMovie.Entity;
			}
			set
			{
				QuoteSet_QuoteMovie previousValue = this._QuoteSet_QuoteMovie.Entity;
				if (((previousValue != value) 
							|| (this._QuoteSet_QuoteMovie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteSet_QuoteMovie.Entity = null;
						previousValue.QuoteMovieMovies.Remove(this);
					}
					this._QuoteSet_QuoteMovie.Entity = value;
					if ((value != null))
					{
						value.QuoteMovieMovies.Add(this);
						this._QuoteMovie_Id = value.Id;
					}
					else
					{
						this._QuoteMovie_Id = default(int);
					}
					this.SendPropertyChanged("QuoteSet_QuoteMovie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteRankingSet")]
	public partial class QuoteRankingSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Ranking;
		
		private int _QuoteId;
		
		private int _MediaId;
		
		private EntityRef<MediaSet> _MediaSet;
		
		private EntityRef<QuoteSet> _QuoteSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRankingChanging(int value);
    partial void OnRankingChanged();
    partial void OnQuoteIdChanging(int value);
    partial void OnQuoteIdChanged();
    partial void OnMediaIdChanging(int value);
    partial void OnMediaIdChanged();
    #endregion
		
		public QuoteRankingSet()
		{
			this._MediaSet = default(EntityRef<MediaSet>);
			this._QuoteSet = default(EntityRef<QuoteSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ranking", DbType="Int NOT NULL")]
		public int Ranking
		{
			get
			{
				return this._Ranking;
			}
			set
			{
				if ((this._Ranking != value))
				{
					this.OnRankingChanging(value);
					this.SendPropertyChanging();
					this._Ranking = value;
					this.SendPropertyChanged("Ranking");
					this.OnRankingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteId", DbType="Int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._QuoteId;
			}
			set
			{
				if ((this._QuoteId != value))
				{
					if (this._QuoteSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteIdChanging(value);
					this.SendPropertyChanging();
					this._QuoteId = value;
					this.SendPropertyChanged("QuoteId");
					this.OnQuoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaId", DbType="Int NOT NULL")]
		public int MediaId
		{
			get
			{
				return this._MediaId;
			}
			set
			{
				if ((this._MediaId != value))
				{
					if (this._MediaSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMediaIdChanging(value);
					this.SendPropertyChanging();
					this._MediaId = value;
					this.SendPropertyChanged("MediaId");
					this.OnMediaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_QuoteRankingSet", Storage="_MediaSet", ThisKey="MediaId", OtherKey="Id", IsForeignKey=true)]
		public MediaSet MediaSet
		{
			get
			{
				return this._MediaSet.Entity;
			}
			set
			{
				MediaSet previousValue = this._MediaSet.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet.Entity = null;
						previousValue.QuoteRankingSets.Remove(this);
					}
					this._MediaSet.Entity = value;
					if ((value != null))
					{
						value.QuoteRankingSets.Add(this);
						this._MediaId = value.Id;
					}
					else
					{
						this._MediaId = default(int);
					}
					this.SendPropertyChanged("MediaSet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteRankingSet", Storage="_QuoteSet", ThisKey="QuoteId", OtherKey="Id", IsForeignKey=true)]
		public QuoteSet QuoteSet
		{
			get
			{
				return this._QuoteSet.Entity;
			}
			set
			{
				QuoteSet previousValue = this._QuoteSet.Entity;
				if (((previousValue != value) 
							|| (this._QuoteSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteSet.Entity = null;
						previousValue.QuoteRankingSets.Remove(this);
					}
					this._QuoteSet.Entity = value;
					if ((value != null))
					{
						value.QuoteRankingSets.Add(this);
						this._QuoteId = value.Id;
					}
					else
					{
						this._QuoteId = default(int);
					}
					this.SendPropertyChanged("QuoteSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteSet")]
	public partial class QuoteSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _QuoteString;
		
		private string _Language;
		
		private int _Invocations;
		
		private EntitySet<QuoteRankingSet> _QuoteRankingSets;
		
		private EntityRef<QuoteSet_QuoteBook> _QuoteSet_QuoteBook;
		
		private EntityRef<QuoteSet_QuoteMovie> _QuoteSet_QuoteMovie;
		
		private EntityRef<QuoteSet_QuoteTV_Show> _QuoteSet_QuoteTV_Show;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuoteStringChanging(string value);
    partial void OnQuoteStringChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnInvocationsChanging(int value);
    partial void OnInvocationsChanged();
    #endregion
		
		public QuoteSet()
		{
			this._QuoteRankingSets = new EntitySet<QuoteRankingSet>(new Action<QuoteRankingSet>(this.attach_QuoteRankingSets), new Action<QuoteRankingSet>(this.detach_QuoteRankingSets));
			this._QuoteSet_QuoteBook = default(EntityRef<QuoteSet_QuoteBook>);
			this._QuoteSet_QuoteMovie = default(EntityRef<QuoteSet_QuoteMovie>);
			this._QuoteSet_QuoteTV_Show = default(EntityRef<QuoteSet_QuoteTV_Show>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteString", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string QuoteString
		{
			get
			{
				return this._QuoteString;
			}
			set
			{
				if ((this._QuoteString != value))
				{
					this.OnQuoteStringChanging(value);
					this.SendPropertyChanging();
					this._QuoteString = value;
					this.SendPropertyChanged("QuoteString");
					this.OnQuoteStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invocations", DbType="Int NOT NULL")]
		public int Invocations
		{
			get
			{
				return this._Invocations;
			}
			set
			{
				if ((this._Invocations != value))
				{
					this.OnInvocationsChanging(value);
					this.SendPropertyChanging();
					this._Invocations = value;
					this.SendPropertyChanged("Invocations");
					this.OnInvocationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteRankingSet", Storage="_QuoteRankingSets", ThisKey="Id", OtherKey="QuoteId")]
		public EntitySet<QuoteRankingSet> QuoteRankingSets
		{
			get
			{
				return this._QuoteRankingSets;
			}
			set
			{
				this._QuoteRankingSets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteSet_QuoteBook", Storage="_QuoteSet_QuoteBook", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public QuoteSet_QuoteBook QuoteSet_QuoteBook
		{
			get
			{
				return this._QuoteSet_QuoteBook.Entity;
			}
			set
			{
				QuoteSet_QuoteBook previousValue = this._QuoteSet_QuoteBook.Entity;
				if (((previousValue != value) 
							|| (this._QuoteSet_QuoteBook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteSet_QuoteBook.Entity = null;
						previousValue.QuoteSet = null;
					}
					this._QuoteSet_QuoteBook.Entity = value;
					if ((value != null))
					{
						value.QuoteSet = this;
					}
					this.SendPropertyChanged("QuoteSet_QuoteBook");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteSet_QuoteMovie", Storage="_QuoteSet_QuoteMovie", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public QuoteSet_QuoteMovie QuoteSet_QuoteMovie
		{
			get
			{
				return this._QuoteSet_QuoteMovie.Entity;
			}
			set
			{
				QuoteSet_QuoteMovie previousValue = this._QuoteSet_QuoteMovie.Entity;
				if (((previousValue != value) 
							|| (this._QuoteSet_QuoteMovie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteSet_QuoteMovie.Entity = null;
						previousValue.QuoteSet = null;
					}
					this._QuoteSet_QuoteMovie.Entity = value;
					if ((value != null))
					{
						value.QuoteSet = this;
					}
					this.SendPropertyChanged("QuoteSet_QuoteMovie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteSet_QuoteTV_Show", Storage="_QuoteSet_QuoteTV_Show", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public QuoteSet_QuoteTV_Show QuoteSet_QuoteTV_Show
		{
			get
			{
				return this._QuoteSet_QuoteTV_Show.Entity;
			}
			set
			{
				QuoteSet_QuoteTV_Show previousValue = this._QuoteSet_QuoteTV_Show.Entity;
				if (((previousValue != value) 
							|| (this._QuoteSet_QuoteTV_Show.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteSet_QuoteTV_Show.Entity = null;
						previousValue.QuoteSet = null;
					}
					this._QuoteSet_QuoteTV_Show.Entity = value;
					if ((value != null))
					{
						value.QuoteSet = this;
					}
					this.SendPropertyChanged("QuoteSet_QuoteTV_Show");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteRankingSets(QuoteRankingSet entity)
		{
			this.SendPropertyChanging();
			entity.QuoteSet = this;
		}
		
		private void detach_QuoteRankingSets(QuoteRankingSet entity)
		{
			this.SendPropertyChanging();
			entity.QuoteSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteSet_QuoteBook")]
	public partial class QuoteSet_QuoteBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private EntitySet<BookQuoteBook> _BookQuoteBooks;
		
		private EntityRef<QuoteSet> _QuoteSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public QuoteSet_QuoteBook()
		{
			this._BookQuoteBooks = new EntitySet<BookQuoteBook>(new Action<BookQuoteBook>(this.attach_BookQuoteBooks), new Action<BookQuoteBook>(this.detach_BookQuoteBooks));
			this._QuoteSet = default(EntityRef<QuoteSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._QuoteSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteBook_BookQuoteBook", Storage="_BookQuoteBooks", ThisKey="Id", OtherKey="QuoteBook_Id")]
		public EntitySet<BookQuoteBook> BookQuoteBooks
		{
			get
			{
				return this._BookQuoteBooks;
			}
			set
			{
				this._BookQuoteBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteSet_QuoteBook", Storage="_QuoteSet", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public QuoteSet QuoteSet
		{
			get
			{
				return this._QuoteSet.Entity;
			}
			set
			{
				QuoteSet previousValue = this._QuoteSet.Entity;
				if (((previousValue != value) 
							|| (this._QuoteSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteSet.Entity = null;
						previousValue.QuoteSet_QuoteBook = null;
					}
					this._QuoteSet.Entity = value;
					if ((value != null))
					{
						value.QuoteSet_QuoteBook = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("QuoteSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookQuoteBooks(BookQuoteBook entity)
		{
			this.SendPropertyChanging();
			entity.QuoteSet_QuoteBook = this;
		}
		
		private void detach_BookQuoteBooks(BookQuoteBook entity)
		{
			this.SendPropertyChanging();
			entity.QuoteSet_QuoteBook = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteSet_QuoteMovie")]
	public partial class QuoteSet_QuoteMovie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private EntitySet<QuoteMovieMovie> _QuoteMovieMovies;
		
		private EntityRef<QuoteSet> _QuoteSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public QuoteSet_QuoteMovie()
		{
			this._QuoteMovieMovies = new EntitySet<QuoteMovieMovie>(new Action<QuoteMovieMovie>(this.attach_QuoteMovieMovies), new Action<QuoteMovieMovie>(this.detach_QuoteMovieMovies));
			this._QuoteSet = default(EntityRef<QuoteSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._QuoteSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteMovie_QuoteMovieMovie", Storage="_QuoteMovieMovies", ThisKey="Id", OtherKey="QuoteMovie_Id")]
		public EntitySet<QuoteMovieMovie> QuoteMovieMovies
		{
			get
			{
				return this._QuoteMovieMovies;
			}
			set
			{
				this._QuoteMovieMovies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteSet_QuoteMovie", Storage="_QuoteSet", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public QuoteSet QuoteSet
		{
			get
			{
				return this._QuoteSet.Entity;
			}
			set
			{
				QuoteSet previousValue = this._QuoteSet.Entity;
				if (((previousValue != value) 
							|| (this._QuoteSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteSet.Entity = null;
						previousValue.QuoteSet_QuoteMovie = null;
					}
					this._QuoteSet.Entity = value;
					if ((value != null))
					{
						value.QuoteSet_QuoteMovie = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("QuoteSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteMovieMovies(QuoteMovieMovie entity)
		{
			this.SendPropertyChanging();
			entity.QuoteSet_QuoteMovie = this;
		}
		
		private void detach_QuoteMovieMovies(QuoteMovieMovie entity)
		{
			this.SendPropertyChanging();
			entity.QuoteSet_QuoteMovie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteSet_QuoteTV_Show")]
	public partial class QuoteSet_QuoteTV_Show : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private EntitySet<QuoteTV_ShowEpisode> _QuoteTV_ShowEpisodes;
		
		private EntityRef<QuoteSet> _QuoteSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public QuoteSet_QuoteTV_Show()
		{
			this._QuoteTV_ShowEpisodes = new EntitySet<QuoteTV_ShowEpisode>(new Action<QuoteTV_ShowEpisode>(this.attach_QuoteTV_ShowEpisodes), new Action<QuoteTV_ShowEpisode>(this.detach_QuoteTV_ShowEpisodes));
			this._QuoteSet = default(EntityRef<QuoteSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._QuoteSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteTV_Show_QuoteTV_ShowEpisode", Storage="_QuoteTV_ShowEpisodes", ThisKey="Id", OtherKey="QuoteTV_Show_Id")]
		public EntitySet<QuoteTV_ShowEpisode> QuoteTV_ShowEpisodes
		{
			get
			{
				return this._QuoteTV_ShowEpisodes;
			}
			set
			{
				this._QuoteTV_ShowEpisodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteSet_QuoteTV_Show", Storage="_QuoteSet", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public QuoteSet QuoteSet
		{
			get
			{
				return this._QuoteSet.Entity;
			}
			set
			{
				QuoteSet previousValue = this._QuoteSet.Entity;
				if (((previousValue != value) 
							|| (this._QuoteSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteSet.Entity = null;
						previousValue.QuoteSet_QuoteTV_Show = null;
					}
					this._QuoteSet.Entity = value;
					if ((value != null))
					{
						value.QuoteSet_QuoteTV_Show = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("QuoteSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteTV_ShowEpisodes(QuoteTV_ShowEpisode entity)
		{
			this.SendPropertyChanging();
			entity.QuoteSet_QuoteTV_Show = this;
		}
		
		private void detach_QuoteTV_ShowEpisodes(QuoteTV_ShowEpisode entity)
		{
			this.SendPropertyChanging();
			entity.QuoteSet_QuoteTV_Show = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteTV_ShowEpisode")]
	public partial class QuoteTV_ShowEpisode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuoteTV_Show_Id;
		
		private int _Episode_Id;
		
		private EntityRef<EpisodeSet> _EpisodeSet;
		
		private EntityRef<QuoteSet_QuoteTV_Show> _QuoteSet_QuoteTV_Show;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuoteTV_Show_IdChanging(int value);
    partial void OnQuoteTV_Show_IdChanged();
    partial void OnEpisode_IdChanging(int value);
    partial void OnEpisode_IdChanged();
    #endregion
		
		public QuoteTV_ShowEpisode()
		{
			this._EpisodeSet = default(EntityRef<EpisodeSet>);
			this._QuoteSet_QuoteTV_Show = default(EntityRef<QuoteSet_QuoteTV_Show>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteTV_Show_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuoteTV_Show_Id
		{
			get
			{
				return this._QuoteTV_Show_Id;
			}
			set
			{
				if ((this._QuoteTV_Show_Id != value))
				{
					if (this._QuoteSet_QuoteTV_Show.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteTV_Show_IdChanging(value);
					this.SendPropertyChanging();
					this._QuoteTV_Show_Id = value;
					this.SendPropertyChanged("QuoteTV_Show_Id");
					this.OnQuoteTV_Show_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Episode_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Episode_Id
		{
			get
			{
				return this._Episode_Id;
			}
			set
			{
				if ((this._Episode_Id != value))
				{
					if (this._EpisodeSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEpisode_IdChanging(value);
					this.SendPropertyChanging();
					this._Episode_Id = value;
					this.SendPropertyChanged("Episode_Id");
					this.OnEpisode_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EpisodeSet_QuoteTV_ShowEpisode", Storage="_EpisodeSet", ThisKey="Episode_Id", OtherKey="Id", IsForeignKey=true)]
		public EpisodeSet EpisodeSet
		{
			get
			{
				return this._EpisodeSet.Entity;
			}
			set
			{
				EpisodeSet previousValue = this._EpisodeSet.Entity;
				if (((previousValue != value) 
							|| (this._EpisodeSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EpisodeSet.Entity = null;
						previousValue.QuoteTV_ShowEpisodes.Remove(this);
					}
					this._EpisodeSet.Entity = value;
					if ((value != null))
					{
						value.QuoteTV_ShowEpisodes.Add(this);
						this._Episode_Id = value.Id;
					}
					else
					{
						this._Episode_Id = default(int);
					}
					this.SendPropertyChanged("EpisodeSet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteSet_QuoteTV_Show_QuoteTV_ShowEpisode", Storage="_QuoteSet_QuoteTV_Show", ThisKey="QuoteTV_Show_Id", OtherKey="Id", IsForeignKey=true)]
		public QuoteSet_QuoteTV_Show QuoteSet_QuoteTV_Show
		{
			get
			{
				return this._QuoteSet_QuoteTV_Show.Entity;
			}
			set
			{
				QuoteSet_QuoteTV_Show previousValue = this._QuoteSet_QuoteTV_Show.Entity;
				if (((previousValue != value) 
							|| (this._QuoteSet_QuoteTV_Show.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteSet_QuoteTV_Show.Entity = null;
						previousValue.QuoteTV_ShowEpisodes.Remove(this);
					}
					this._QuoteSet_QuoteTV_Show.Entity = value;
					if ((value != null))
					{
						value.QuoteTV_ShowEpisodes.Add(this);
						this._QuoteTV_Show_Id = value.Id;
					}
					else
					{
						this._QuoteTV_Show_Id = default(int);
					}
					this.SendPropertyChanged("QuoteSet_QuoteTV_Show");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestSet")]
	public partial class RequestSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _UserTo;
		
		private EntitySet<RequestUserMedia> _RequestUserMedias;
		
		private EntityRef<UserSet> _UserSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserToChanging(string value);
    partial void OnUserToChanged();
    #endregion
		
		public RequestSet()
		{
			this._RequestUserMedias = new EntitySet<RequestUserMedia>(new Action<RequestUserMedia>(this.attach_RequestUserMedias), new Action<RequestUserMedia>(this.detach_RequestUserMedias));
			this._UserSet = default(EntityRef<UserSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTo", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserTo
		{
			get
			{
				return this._UserTo;
			}
			set
			{
				if ((this._UserTo != value))
				{
					this.OnUserToChanging(value);
					this.SendPropertyChanging();
					this._UserTo = value;
					this.SendPropertyChanged("UserTo");
					this.OnUserToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestSet_RequestUserMedia", Storage="_RequestUserMedias", ThisKey="Id", OtherKey="Request_Id")]
		public EntitySet<RequestUserMedia> RequestUserMedias
		{
			get
			{
				return this._RequestUserMedias;
			}
			set
			{
				this._RequestUserMedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_RequestSet", Storage="_UserSet", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public UserSet UserSet
		{
			get
			{
				return this._UserSet.Entity;
			}
			set
			{
				UserSet previousValue = this._UserSet.Entity;
				if (((previousValue != value) 
							|| (this._UserSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserSet.Entity = null;
						previousValue.RequestSets.Remove(this);
					}
					this._UserSet.Entity = value;
					if ((value != null))
					{
						value.RequestSets.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestUserMedias(RequestUserMedia entity)
		{
			this.SendPropertyChanging();
			entity.RequestSet = this;
		}
		
		private void detach_RequestUserMedias(RequestUserMedia entity)
		{
			this.SendPropertyChanging();
			entity.RequestSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestUserMedia")]
	public partial class RequestUserMedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Request_Id;
		
		private int _UserMedia_Id;
		
		private EntityRef<RequestSet> _RequestSet;
		
		private EntityRef<UserMediaSet> _UserMediaSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequest_IdChanging(int value);
    partial void OnRequest_IdChanged();
    partial void OnUserMedia_IdChanging(int value);
    partial void OnUserMedia_IdChanged();
    #endregion
		
		public RequestUserMedia()
		{
			this._RequestSet = default(EntityRef<RequestSet>);
			this._UserMediaSet = default(EntityRef<UserMediaSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Request_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Request_Id
		{
			get
			{
				return this._Request_Id;
			}
			set
			{
				if ((this._Request_Id != value))
				{
					if (this._RequestSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequest_IdChanging(value);
					this.SendPropertyChanging();
					this._Request_Id = value;
					this.SendPropertyChanged("Request_Id");
					this.OnRequest_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMedia_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserMedia_Id
		{
			get
			{
				return this._UserMedia_Id;
			}
			set
			{
				if ((this._UserMedia_Id != value))
				{
					if (this._UserMediaSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserMedia_IdChanging(value);
					this.SendPropertyChanging();
					this._UserMedia_Id = value;
					this.SendPropertyChanged("UserMedia_Id");
					this.OnUserMedia_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestSet_RequestUserMedia", Storage="_RequestSet", ThisKey="Request_Id", OtherKey="Id", IsForeignKey=true)]
		public RequestSet RequestSet
		{
			get
			{
				return this._RequestSet.Entity;
			}
			set
			{
				RequestSet previousValue = this._RequestSet.Entity;
				if (((previousValue != value) 
							|| (this._RequestSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestSet.Entity = null;
						previousValue.RequestUserMedias.Remove(this);
					}
					this._RequestSet.Entity = value;
					if ((value != null))
					{
						value.RequestUserMedias.Add(this);
						this._Request_Id = value.Id;
					}
					else
					{
						this._Request_Id = default(int);
					}
					this.SendPropertyChanged("RequestSet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMediaSet_RequestUserMedia", Storage="_UserMediaSet", ThisKey="UserMedia_Id", OtherKey="Id", IsForeignKey=true)]
		public UserMediaSet UserMediaSet
		{
			get
			{
				return this._UserMediaSet.Entity;
			}
			set
			{
				UserMediaSet previousValue = this._UserMediaSet.Entity;
				if (((previousValue != value) 
							|| (this._UserMediaSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserMediaSet.Entity = null;
						previousValue.RequestUserMedias.Remove(this);
					}
					this._UserMediaSet.Entity = value;
					if ((value != null))
					{
						value.RequestUserMedias.Add(this);
						this._UserMedia_Id = value.Id;
					}
					else
					{
						this._UserMedia_Id = default(int);
					}
					this.SendPropertyChanged("UserMediaSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SeasonSet")]
	public partial class SeasonSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Number;
		
		private int _TV_ShowId;
		
		private EntitySet<EpisodeSet> _EpisodeSets;
		
		private EntityRef<MediaSet_TV_Show> _MediaSet_TV_Show;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnTV_ShowIdChanging(int value);
    partial void OnTV_ShowIdChanged();
    #endregion
		
		public SeasonSet()
		{
			this._EpisodeSets = new EntitySet<EpisodeSet>(new Action<EpisodeSet>(this.attach_EpisodeSets), new Action<EpisodeSet>(this.detach_EpisodeSets));
			this._MediaSet_TV_Show = default(EntityRef<MediaSet_TV_Show>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TV_ShowId", DbType="Int NOT NULL")]
		public int TV_ShowId
		{
			get
			{
				return this._TV_ShowId;
			}
			set
			{
				if ((this._TV_ShowId != value))
				{
					if (this._MediaSet_TV_Show.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTV_ShowIdChanging(value);
					this.SendPropertyChanging();
					this._TV_ShowId = value;
					this.SendPropertyChanged("TV_ShowId");
					this.OnTV_ShowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeasonSet_EpisodeSet", Storage="_EpisodeSets", ThisKey="Id", OtherKey="SeasonId")]
		public EntitySet<EpisodeSet> EpisodeSets
		{
			get
			{
				return this._EpisodeSets;
			}
			set
			{
				this._EpisodeSets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_TV_Show_SeasonSet", Storage="_MediaSet_TV_Show", ThisKey="TV_ShowId", OtherKey="Id", IsForeignKey=true)]
		public MediaSet_TV_Show MediaSet_TV_Show
		{
			get
			{
				return this._MediaSet_TV_Show.Entity;
			}
			set
			{
				MediaSet_TV_Show previousValue = this._MediaSet_TV_Show.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_TV_Show.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_TV_Show.Entity = null;
						previousValue.SeasonSets.Remove(this);
					}
					this._MediaSet_TV_Show.Entity = value;
					if ((value != null))
					{
						value.SeasonSets.Add(this);
						this._TV_ShowId = value.Id;
					}
					else
					{
						this._TV_ShowId = default(int);
					}
					this.SendPropertyChanged("MediaSet_TV_Show");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EpisodeSets(EpisodeSet entity)
		{
			this.SendPropertyChanging();
			entity.SeasonSet = this;
		}
		
		private void detach_EpisodeSets(EpisodeSet entity)
		{
			this.SendPropertyChanging();
			entity.SeasonSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserFriends")]
	public partial class UserFriend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_1_Id;
		
		private int _User_2_Id;
		
		private EntityRef<UserSet> _UserSet;
		
		private EntityRef<UserSet> _UserSet1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_1_IdChanging(int value);
    partial void OnUser_1_IdChanged();
    partial void OnUser_2_IdChanging(int value);
    partial void OnUser_2_IdChanged();
    #endregion
		
		public UserFriend()
		{
			this._UserSet = default(EntityRef<UserSet>);
			this._UserSet1 = default(EntityRef<UserSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_1_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_1_Id
		{
			get
			{
				return this._User_1_Id;
			}
			set
			{
				if ((this._User_1_Id != value))
				{
					if (this._UserSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_1_IdChanging(value);
					this.SendPropertyChanging();
					this._User_1_Id = value;
					this.SendPropertyChanged("User_1_Id");
					this.OnUser_1_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_2_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_2_Id
		{
			get
			{
				return this._User_2_Id;
			}
			set
			{
				if ((this._User_2_Id != value))
				{
					if (this._UserSet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_2_IdChanging(value);
					this.SendPropertyChanging();
					this._User_2_Id = value;
					this.SendPropertyChanged("User_2_Id");
					this.OnUser_2_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_UserFriend", Storage="_UserSet", ThisKey="User_1_Id", OtherKey="Id", IsForeignKey=true)]
		public UserSet UserSet
		{
			get
			{
				return this._UserSet.Entity;
			}
			set
			{
				UserSet previousValue = this._UserSet.Entity;
				if (((previousValue != value) 
							|| (this._UserSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserSet.Entity = null;
						previousValue.UserFriends.Remove(this);
					}
					this._UserSet.Entity = value;
					if ((value != null))
					{
						value.UserFriends.Add(this);
						this._User_1_Id = value.Id;
					}
					else
					{
						this._User_1_Id = default(int);
					}
					this.SendPropertyChanged("UserSet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_UserFriend1", Storage="_UserSet1", ThisKey="User_2_Id", OtherKey="Id", IsForeignKey=true)]
		public UserSet UserSet1
		{
			get
			{
				return this._UserSet1.Entity;
			}
			set
			{
				UserSet previousValue = this._UserSet1.Entity;
				if (((previousValue != value) 
							|| (this._UserSet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserSet1.Entity = null;
						previousValue.UserFriends1.Remove(this);
					}
					this._UserSet1.Entity = value;
					if ((value != null))
					{
						value.UserFriends1.Add(this);
						this._User_2_Id = value.Id;
					}
					else
					{
						this._User_2_Id = default(int);
					}
					this.SendPropertyChanged("UserSet1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMediaSet")]
	public partial class UserMediaSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _StoragePlace;
		
		private string _MediaStatus;
		
		private int _UserId;
		
		private EntitySet<RequestUserMedia> _RequestUserMedias;
		
		private EntityRef<UserMediaSet_UserBook> _UserMediaSet_UserBook;
		
		private EntityRef<UserMediaSet_UserVideo> _UserMediaSet_UserVideo;
		
		private EntityRef<UserSet> _UserSet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStoragePlaceChanging(string value);
    partial void OnStoragePlaceChanged();
    partial void OnMediaStatusChanging(string value);
    partial void OnMediaStatusChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public UserMediaSet()
		{
			this._RequestUserMedias = new EntitySet<RequestUserMedia>(new Action<RequestUserMedia>(this.attach_RequestUserMedias), new Action<RequestUserMedia>(this.detach_RequestUserMedias));
			this._UserMediaSet_UserBook = default(EntityRef<UserMediaSet_UserBook>);
			this._UserMediaSet_UserVideo = default(EntityRef<UserMediaSet_UserVideo>);
			this._UserSet = default(EntityRef<UserSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoragePlace", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StoragePlace
		{
			get
			{
				return this._StoragePlace;
			}
			set
			{
				if ((this._StoragePlace != value))
				{
					this.OnStoragePlaceChanging(value);
					this.SendPropertyChanging();
					this._StoragePlace = value;
					this.SendPropertyChanged("StoragePlace");
					this.OnStoragePlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaStatus", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MediaStatus
		{
			get
			{
				return this._MediaStatus;
			}
			set
			{
				if ((this._MediaStatus != value))
				{
					this.OnMediaStatusChanging(value);
					this.SendPropertyChanging();
					this._MediaStatus = value;
					this.SendPropertyChanged("MediaStatus");
					this.OnMediaStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMediaSet_RequestUserMedia", Storage="_RequestUserMedias", ThisKey="Id", OtherKey="UserMedia_Id")]
		public EntitySet<RequestUserMedia> RequestUserMedias
		{
			get
			{
				return this._RequestUserMedias;
			}
			set
			{
				this._RequestUserMedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMediaSet_UserMediaSet_UserBook", Storage="_UserMediaSet_UserBook", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public UserMediaSet_UserBook UserMediaSet_UserBook
		{
			get
			{
				return this._UserMediaSet_UserBook.Entity;
			}
			set
			{
				UserMediaSet_UserBook previousValue = this._UserMediaSet_UserBook.Entity;
				if (((previousValue != value) 
							|| (this._UserMediaSet_UserBook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserMediaSet_UserBook.Entity = null;
						previousValue.UserMediaSet = null;
					}
					this._UserMediaSet_UserBook.Entity = value;
					if ((value != null))
					{
						value.UserMediaSet = this;
					}
					this.SendPropertyChanged("UserMediaSet_UserBook");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMediaSet_UserMediaSet_UserVideo", Storage="_UserMediaSet_UserVideo", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public UserMediaSet_UserVideo UserMediaSet_UserVideo
		{
			get
			{
				return this._UserMediaSet_UserVideo.Entity;
			}
			set
			{
				UserMediaSet_UserVideo previousValue = this._UserMediaSet_UserVideo.Entity;
				if (((previousValue != value) 
							|| (this._UserMediaSet_UserVideo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserMediaSet_UserVideo.Entity = null;
						previousValue.UserMediaSet = null;
					}
					this._UserMediaSet_UserVideo.Entity = value;
					if ((value != null))
					{
						value.UserMediaSet = this;
					}
					this.SendPropertyChanged("UserMediaSet_UserVideo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_UserMediaSet", Storage="_UserSet", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public UserSet UserSet
		{
			get
			{
				return this._UserSet.Entity;
			}
			set
			{
				UserSet previousValue = this._UserSet.Entity;
				if (((previousValue != value) 
							|| (this._UserSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserSet.Entity = null;
						previousValue.UserMediaSets.Remove(this);
					}
					this._UserSet.Entity = value;
					if ((value != null))
					{
						value.UserMediaSets.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestUserMedias(RequestUserMedia entity)
		{
			this.SendPropertyChanging();
			entity.UserMediaSet = this;
		}
		
		private void detach_RequestUserMedias(RequestUserMedia entity)
		{
			this.SendPropertyChanging();
			entity.UserMediaSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMediaSet_UserBook")]
	public partial class UserMediaSet_UserBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookId;
		
		private int _Id;
		
		private EntityRef<UserMediaSet> _UserMediaSet;
		
		private EntityRef<MediaSet_Book> _MediaSet_Book;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public UserMediaSet_UserBook()
		{
			this._UserMediaSet = default(EntityRef<UserMediaSet>);
			this._MediaSet_Book = default(EntityRef<MediaSet_Book>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._MediaSet_Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._UserMediaSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMediaSet_UserMediaSet_UserBook", Storage="_UserMediaSet", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public UserMediaSet UserMediaSet
		{
			get
			{
				return this._UserMediaSet.Entity;
			}
			set
			{
				UserMediaSet previousValue = this._UserMediaSet.Entity;
				if (((previousValue != value) 
							|| (this._UserMediaSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserMediaSet.Entity = null;
						previousValue.UserMediaSet_UserBook = null;
					}
					this._UserMediaSet.Entity = value;
					if ((value != null))
					{
						value.UserMediaSet_UserBook = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("UserMediaSet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Book_UserMediaSet_UserBook", Storage="_MediaSet_Book", ThisKey="BookId", OtherKey="Id", IsForeignKey=true)]
		public MediaSet_Book MediaSet_Book
		{
			get
			{
				return this._MediaSet_Book.Entity;
			}
			set
			{
				MediaSet_Book previousValue = this._MediaSet_Book.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Book.Entity = null;
						previousValue.UserMediaSet_UserBooks.Remove(this);
					}
					this._MediaSet_Book.Entity = value;
					if ((value != null))
					{
						value.UserMediaSet_UserBooks.Add(this);
						this._BookId = value.Id;
					}
					else
					{
						this._BookId = default(int);
					}
					this.SendPropertyChanged("MediaSet_Book");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMediaSet_UserVideo")]
	public partial class UserMediaSet_UserVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StorageType;
		
		private int _VideoId;
		
		private int _Id;
		
		private EntityRef<UserMediaSet> _UserMediaSet;
		
		private EntityRef<MediaSet_Video> _MediaSet_Video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStorageTypeChanging(string value);
    partial void OnStorageTypeChanged();
    partial void OnVideoIdChanging(int value);
    partial void OnVideoIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public UserMediaSet_UserVideo()
		{
			this._UserMediaSet = default(EntityRef<UserMediaSet>);
			this._MediaSet_Video = default(EntityRef<MediaSet_Video>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageType", DbType="NVarChar(MAX)")]
		public string StorageType
		{
			get
			{
				return this._StorageType;
			}
			set
			{
				if ((this._StorageType != value))
				{
					this.OnStorageTypeChanging(value);
					this.SendPropertyChanging();
					this._StorageType = value;
					this.SendPropertyChanged("StorageType");
					this.OnStorageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoId", DbType="Int NOT NULL")]
		public int VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					if (this._MediaSet_Video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._UserMediaSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMediaSet_UserMediaSet_UserVideo", Storage="_UserMediaSet", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public UserMediaSet UserMediaSet
		{
			get
			{
				return this._UserMediaSet.Entity;
			}
			set
			{
				UserMediaSet previousValue = this._UserMediaSet.Entity;
				if (((previousValue != value) 
							|| (this._UserMediaSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserMediaSet.Entity = null;
						previousValue.UserMediaSet_UserVideo = null;
					}
					this._UserMediaSet.Entity = value;
					if ((value != null))
					{
						value.UserMediaSet_UserVideo = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("UserMediaSet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaSet_Video_UserMediaSet_UserVideo", Storage="_MediaSet_Video", ThisKey="VideoId", OtherKey="Id", IsForeignKey=true)]
		public MediaSet_Video MediaSet_Video
		{
			get
			{
				return this._MediaSet_Video.Entity;
			}
			set
			{
				MediaSet_Video previousValue = this._MediaSet_Video.Entity;
				if (((previousValue != value) 
							|| (this._MediaSet_Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaSet_Video.Entity = null;
						previousValue.UserMediaSet_UserVideos.Remove(this);
					}
					this._MediaSet_Video.Entity = value;
					if ((value != null))
					{
						value.UserMediaSet_UserVideos.Add(this);
						this._VideoId = value.Id;
					}
					else
					{
						this._VideoId = default(int);
					}
					this.SendPropertyChanged("MediaSet_Video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSet")]
	public partial class UserSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private EntityRef<UserSet_Admin> _UserSet_Admin;
		
		private EntitySet<BorrowedDetailsSet> _BorrowedDetailsSets;
		
		private EntitySet<RequestSet> _RequestSets;
		
		private EntitySet<UserFriend> _UserFriends;
		
		private EntitySet<UserFriend> _UserFriends1;
		
		private EntitySet<UserMediaSet> _UserMediaSets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public UserSet()
		{
			this._UserSet_Admin = default(EntityRef<UserSet_Admin>);
			this._BorrowedDetailsSets = new EntitySet<BorrowedDetailsSet>(new Action<BorrowedDetailsSet>(this.attach_BorrowedDetailsSets), new Action<BorrowedDetailsSet>(this.detach_BorrowedDetailsSets));
			this._RequestSets = new EntitySet<RequestSet>(new Action<RequestSet>(this.attach_RequestSets), new Action<RequestSet>(this.detach_RequestSets));
			this._UserFriends = new EntitySet<UserFriend>(new Action<UserFriend>(this.attach_UserFriends), new Action<UserFriend>(this.detach_UserFriends));
			this._UserFriends1 = new EntitySet<UserFriend>(new Action<UserFriend>(this.attach_UserFriends1), new Action<UserFriend>(this.detach_UserFriends1));
			this._UserMediaSets = new EntitySet<UserMediaSet>(new Action<UserMediaSet>(this.attach_UserMediaSets), new Action<UserMediaSet>(this.detach_UserMediaSets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_UserSet_Admin", Storage="_UserSet_Admin", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public UserSet_Admin UserSet_Admin
		{
			get
			{
				return this._UserSet_Admin.Entity;
			}
			set
			{
				UserSet_Admin previousValue = this._UserSet_Admin.Entity;
				if (((previousValue != value) 
							|| (this._UserSet_Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserSet_Admin.Entity = null;
						previousValue.UserSet = null;
					}
					this._UserSet_Admin.Entity = value;
					if ((value != null))
					{
						value.UserSet = this;
					}
					this.SendPropertyChanged("UserSet_Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_BorrowedDetailsSet", Storage="_BorrowedDetailsSets", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<BorrowedDetailsSet> BorrowedDetailsSets
		{
			get
			{
				return this._BorrowedDetailsSets;
			}
			set
			{
				this._BorrowedDetailsSets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_RequestSet", Storage="_RequestSets", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<RequestSet> RequestSets
		{
			get
			{
				return this._RequestSets;
			}
			set
			{
				this._RequestSets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_UserFriend", Storage="_UserFriends", ThisKey="Id", OtherKey="User_1_Id")]
		public EntitySet<UserFriend> UserFriends
		{
			get
			{
				return this._UserFriends;
			}
			set
			{
				this._UserFriends.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_UserFriend1", Storage="_UserFriends1", ThisKey="Id", OtherKey="User_2_Id")]
		public EntitySet<UserFriend> UserFriends1
		{
			get
			{
				return this._UserFriends1;
			}
			set
			{
				this._UserFriends1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSet_UserMediaSet", Storage="_UserMediaSets", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserMediaSet> UserMediaSets
		{
			get
			{
				return this._UserMediaSets;
			}
			set
			{
				this._UserMediaSets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BorrowedDetailsSets(BorrowedDetailsSet entity)
		{
			this.SendPropertyChanging();
			entity.UserSet = this;
		}
		
		private void detach_BorrowedDetailsSets(BorrowedDetailsSet entity)
		{
			this.SendPropertyChanging();
			entity.UserSet = null;
		}
		
		private void attach_RequestSets(RequestSet entity)
		{
			this.SendPropertyChanging();
			entity.UserSet = this;
		}
		
		private void detach_RequestSets(RequestSet entity)
		{
			this.SendPropertyChanging();
			entity.UserSet = null;
		}
		
		private void attach_UserFriends(UserFriend entity)
		{
			this.SendPropertyChanging();
			entity.UserSet = this;
		}
		
		private void detach_UserFriends(UserFriend entity)
		{
			this.SendPropertyChanging();
			entity.UserSet = null;
		}
		
		private void attach_UserFriends1(UserFriend entity)
		{
			this.SendPropertyChanging();
			entity.UserSet1 = this;
		}
		
		private void detach_UserFriends1(UserFriend entity)
		{
			this.SendPropertyChanging();
			entity.UserSet1 = null;
		}
		
		private void attach_UserMediaSets(UserMediaSet entity)
		{
			this.SendPropertyChanging();
			entity.UserSet = this;
		}
		
		private void detach_UserMediaSets(UserMediaSet entity)
		{
			this.SendPropertyChanging();
			entity.UserSet = null;
		}
	}
}
#pragma warning restore 1591
