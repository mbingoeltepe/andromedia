//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MediaLib", "TV_ShowSeason", "TV_Show", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.TV_Show), "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.Season), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "UserUserMedien", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.User), "UserMedien", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.UserMedia), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "EpisodeSeason", "Episode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.Episode), "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.Season), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "UserBooksBook", "UserBooks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.UserBook), "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.Book), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "ActorVideo", "Actor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.Actor), "Video", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.Video))]
[assembly: EdmRelationshipAttribute("MediaLib", "BookMovie", "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MovieLibrary.Models.Book), "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MovieLibrary.Models.Movie))]
[assembly: EdmRelationshipAttribute("MediaLib", "RequestUser", "BorrowRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.BorrowRequest), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.User), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "RequestUserMedia", "BorrowRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.BorrowRequest), "UserMedia", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.UserMedia))]
[assembly: EdmRelationshipAttribute("MediaLib", "BorrowedDetailsUserMedia", "BorrowedDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.BorrowedDetails), "UserMedia", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.UserMedia))]
[assembly: EdmRelationshipAttribute("MediaLib", "InsertRequestMedia", "InsertRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MovieLibrary.Models.InsertRequest), "Media", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.Media))]
[assembly: EdmRelationshipAttribute("MediaLib", "InsertRequestUser", "InsertRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.InsertRequest), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.User), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "UserUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.User))]
[assembly: EdmRelationshipAttribute("MediaLib", "BorrowedDetailsUser", "BorrowedDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.BorrowedDetails), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.User), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "AuthorBook", "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.Author), "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.Book))]
[assembly: EdmRelationshipAttribute("MediaLib", "QuoteMovieMovie", "QuoteMovie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.QuoteMovie), "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.Movie), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "QuoteTV_ShowEpisode", "QuoteTV_Show", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.QuoteTV_Show), "Episode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.Episode), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "QuoteBookBook", "QuoteBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.QuoteBook), "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.Book), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "QuoteMedia", "Quote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.Quote), "Media", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.Media), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "QuoteUser", "Quote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.Quote), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.User), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "UserMovieMovie", "UserMovie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.UserMovie), "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.Movie), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "UserTV_ShowSeason", "UserTV_Show", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.UserTV_Show), "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MovieLibrary.Models.Season), true)]
[assembly: EdmRelationshipAttribute("MediaLib", "UserUser1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieLibrary.Models.User))]

#endregion

namespace MovieLibrary.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MediaLibContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MediaLibContainer object using the connection string found in the 'MediaLibContainer' section of the application configuration file.
        /// </summary>
        public MediaLibContainer() : base("name=MediaLibContainer", "MediaLibContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MediaLibContainer object.
        /// </summary>
        public MediaLibContainer(string connectionString) : base(connectionString, "MediaLibContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MediaLibContainer object.
        /// </summary>
        public MediaLibContainer(EntityConnection connection) : base(connection, "MediaLibContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Episode> EpisodeSet
        {
            get
            {
                if ((_EpisodeSet == null))
                {
                    _EpisodeSet = base.CreateObjectSet<Episode>("EpisodeSet");
                }
                return _EpisodeSet;
            }
        }
        private ObjectSet<Episode> _EpisodeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Media> MediaSet
        {
            get
            {
                if ((_MediaSet == null))
                {
                    _MediaSet = base.CreateObjectSet<Media>("MediaSet");
                }
                return _MediaSet;
            }
        }
        private ObjectSet<Media> _MediaSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Quote> QuoteSet
        {
            get
            {
                if ((_QuoteSet == null))
                {
                    _QuoteSet = base.CreateObjectSet<Quote>("QuoteSet");
                }
                return _QuoteSet;
            }
        }
        private ObjectSet<Quote> _QuoteSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Season> SeasonSet
        {
            get
            {
                if ((_SeasonSet == null))
                {
                    _SeasonSet = base.CreateObjectSet<Season>("SeasonSet");
                }
                return _SeasonSet;
            }
        }
        private ObjectSet<Season> _SeasonSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> UserSet
        {
            get
            {
                if ((_UserSet == null))
                {
                    _UserSet = base.CreateObjectSet<User>("UserSet");
                }
                return _UserSet;
            }
        }
        private ObjectSet<User> _UserSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserMedia> UserMediaSet
        {
            get
            {
                if ((_UserMediaSet == null))
                {
                    _UserMediaSet = base.CreateObjectSet<UserMedia>("UserMediaSet");
                }
                return _UserMediaSet;
            }
        }
        private ObjectSet<UserMedia> _UserMediaSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BorrowRequest> BorrowRequestSet
        {
            get
            {
                if ((_BorrowRequestSet == null))
                {
                    _BorrowRequestSet = base.CreateObjectSet<BorrowRequest>("BorrowRequestSet");
                }
                return _BorrowRequestSet;
            }
        }
        private ObjectSet<BorrowRequest> _BorrowRequestSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BorrowedDetails> BorrowedDetailsSet
        {
            get
            {
                if ((_BorrowedDetailsSet == null))
                {
                    _BorrowedDetailsSet = base.CreateObjectSet<BorrowedDetails>("BorrowedDetailsSet");
                }
                return _BorrowedDetailsSet;
            }
        }
        private ObjectSet<BorrowedDetails> _BorrowedDetailsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsertRequest> InsertRequestSet
        {
            get
            {
                if ((_InsertRequestSet == null))
                {
                    _InsertRequestSet = base.CreateObjectSet<InsertRequest>("InsertRequestSet");
                }
                return _InsertRequestSet;
            }
        }
        private ObjectSet<InsertRequest> _InsertRequestSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> PersonSet
        {
            get
            {
                if ((_PersonSet == null))
                {
                    _PersonSet = base.CreateObjectSet<Person>("PersonSet");
                }
                return _PersonSet;
            }
        }
        private ObjectSet<Person> _PersonSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EpisodeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEpisodeSet(Episode episode)
        {
            base.AddObject("EpisodeSet", episode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaSet(Media media)
        {
            base.AddObject("MediaSet", media);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuoteSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuoteSet(Quote quote)
        {
            base.AddObject("QuoteSet", quote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SeasonSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeasonSet(Season season)
        {
            base.AddObject("SeasonSet", season);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSet(User user)
        {
            base.AddObject("UserSet", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserMediaSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserMediaSet(UserMedia userMedia)
        {
            base.AddObject("UserMediaSet", userMedia);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BorrowRequestSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBorrowRequestSet(BorrowRequest borrowRequest)
        {
            base.AddObject("BorrowRequestSet", borrowRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BorrowedDetailsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBorrowedDetailsSet(BorrowedDetails borrowedDetails)
        {
            base.AddObject("BorrowedDetailsSet", borrowedDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsertRequestSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsertRequestSet(InsertRequest insertRequest)
        {
            base.AddObject("InsertRequestSet", insertRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonSet(Person person)
        {
            base.AddObject("PersonSet", person);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Actor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actor : Person
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Actor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Actor CreateActor(global::System.Int32 id, global::System.String firstName, global::System.String lastName)
        {
            Actor actor = new Actor();
            actor.Id = id;
            actor.FirstName = firstName;
            actor.LastName = lastName;
            return actor;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "ActorVideo", "Video")]
        public EntityCollection<Video> Video
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Video>("MediaLib.ActorVideo", "Video");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Video>("MediaLib.ActorVideo", "Video", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Admin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Admin : User
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Admin object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="verified">Initial value of the Verified property.</param>
        /// <param name="closed">Initial value of the Closed property.</param>
        public static Admin CreateAdmin(global::System.Int32 id, global::System.String username, global::System.String password, global::System.Boolean verified, global::System.Boolean closed)
        {
            Admin admin = new Admin();
            admin.Id = id;
            admin.Username = username;
            admin.Password = password;
            admin.Verified = verified;
            admin.Closed = closed;
            return admin;
        }

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : Person
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Author object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Author CreateAuthor(global::System.Int32 id, global::System.String firstName, global::System.String lastName)
        {
            Author author = new Author();
            author.Id = id;
            author.FirstName = firstName;
            author.LastName = lastName;
            return author;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "AuthorBook", "Book")]
        public EntityCollection<Book> Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Book>("MediaLib.AuthorBook", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Book>("MediaLib.AuthorBook", "Book", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="addingDate">Initial value of the AddingDate property.</param>
        public static Book CreateBook(global::System.Int32 id, global::System.String title, global::System.DateTime addingDate)
        {
            Book book = new Book();
            book.Id = id;
            book.Title = title;
            book.AddingDate = addingDate;
            return book;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Isbn
        {
            get
            {
                return _Isbn;
            }
            set
            {
                OnIsbnChanging(value);
                ReportPropertyChanging("Isbn");
                _Isbn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Isbn");
                OnIsbnChanged();
            }
        }
        private global::System.String _Isbn;
        partial void OnIsbnChanging(global::System.String value);
        partial void OnIsbnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "UserBooksBook", "UserBooks")]
        public EntityCollection<UserBook> UserBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserBook>("MediaLib.UserBooksBook", "UserBooks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserBook>("MediaLib.UserBooksBook", "UserBooks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "BookMovie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("MediaLib.BookMovie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("MediaLib.BookMovie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("MediaLib.BookMovie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("MediaLib.BookMovie", "Movie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "AuthorBook", "Author")]
        public EntityCollection<Author> Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Author>("MediaLib.AuthorBook", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Author>("MediaLib.AuthorBook", "Author", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "QuoteBookBook", "QuoteBook")]
        public EntityCollection<QuoteBook> QuoteBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteBook>("MediaLib.QuoteBookBook", "QuoteBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteBook>("MediaLib.QuoteBookBook", "QuoteBook", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="BorrowedDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BorrowedDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BorrowedDetails object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="borrowedFromUserId">Initial value of the BorrowedFromUserId property.</param>
        /// <param name="dateOfReturn">Initial value of the DateOfReturn property.</param>
        /// <param name="takeBackRequest">Initial value of the TakeBackRequest property.</param>
        public static BorrowedDetails CreateBorrowedDetails(global::System.Int32 id, global::System.DateTime date, global::System.Int32 borrowedFromUserId, global::System.DateTime dateOfReturn, global::System.Boolean takeBackRequest)
        {
            BorrowedDetails borrowedDetails = new BorrowedDetails();
            borrowedDetails.Id = id;
            borrowedDetails.Date = date;
            borrowedDetails.BorrowedFromUserId = borrowedFromUserId;
            borrowedDetails.DateOfReturn = dateOfReturn;
            borrowedDetails.TakeBackRequest = takeBackRequest;
            return borrowedDetails;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BorrowedFromUserId
        {
            get
            {
                return _BorrowedFromUserId;
            }
            set
            {
                OnBorrowedFromUserIdChanging(value);
                ReportPropertyChanging("BorrowedFromUserId");
                _BorrowedFromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BorrowedFromUserId");
                OnBorrowedFromUserIdChanged();
            }
        }
        private global::System.Int32 _BorrowedFromUserId;
        partial void OnBorrowedFromUserIdChanging(global::System.Int32 value);
        partial void OnBorrowedFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfReturn
        {
            get
            {
                return _DateOfReturn;
            }
            set
            {
                OnDateOfReturnChanging(value);
                ReportPropertyChanging("DateOfReturn");
                _DateOfReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfReturn");
                OnDateOfReturnChanged();
            }
        }
        private global::System.DateTime _DateOfReturn;
        partial void OnDateOfReturnChanging(global::System.DateTime value);
        partial void OnDateOfReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameTo
        {
            get
            {
                return _NameTo;
            }
            set
            {
                OnNameToChanging(value);
                ReportPropertyChanging("NameTo");
                _NameTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameTo");
                OnNameToChanged();
            }
        }
        private global::System.String _NameTo;
        partial void OnNameToChanging(global::System.String value);
        partial void OnNameToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TakeBackRequest
        {
            get
            {
                return _TakeBackRequest;
            }
            set
            {
                OnTakeBackRequestChanging(value);
                ReportPropertyChanging("TakeBackRequest");
                _TakeBackRequest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TakeBackRequest");
                OnTakeBackRequestChanged();
            }
        }
        private global::System.Boolean _TakeBackRequest;
        partial void OnTakeBackRequestChanging(global::System.Boolean value);
        partial void OnTakeBackRequestChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "BorrowedDetailsUserMedia", "UserMedia")]
        public UserMedia UserMedia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserMedia>("MediaLib.BorrowedDetailsUserMedia", "UserMedia").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserMedia>("MediaLib.BorrowedDetailsUserMedia", "UserMedia").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserMedia> UserMediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserMedia>("MediaLib.BorrowedDetailsUserMedia", "UserMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserMedia>("MediaLib.BorrowedDetailsUserMedia", "UserMedia", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "BorrowedDetailsUser", "User")]
        public User UserFrom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.BorrowedDetailsUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.BorrowedDetailsUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserFromReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.BorrowedDetailsUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MediaLib.BorrowedDetailsUser", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="BorrowRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BorrowRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BorrowRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userTo">Initial value of the UserTo property.</param>
        public static BorrowRequest CreateBorrowRequest(global::System.Int32 id, global::System.Int32 userId, global::System.String userTo)
        {
            BorrowRequest borrowRequest = new BorrowRequest();
            borrowRequest.Id = id;
            borrowRequest.UserId = userId;
            borrowRequest.UserTo = userTo;
            return borrowRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserTo
        {
            get
            {
                return _UserTo;
            }
            set
            {
                OnUserToChanging(value);
                ReportPropertyChanging("UserTo");
                _UserTo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserTo");
                OnUserToChanged();
            }
        }
        private global::System.String _UserTo;
        partial void OnUserToChanging(global::System.String value);
        partial void OnUserToChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "RequestUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.RequestUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.RequestUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.RequestUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MediaLib.RequestUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "RequestUserMedia", "UserMedia")]
        public UserMedia UserMedia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserMedia>("MediaLib.RequestUserMedia", "UserMedia").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserMedia>("MediaLib.RequestUserMedia", "UserMedia").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserMedia> UserMediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserMedia>("MediaLib.RequestUserMedia", "UserMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserMedia>("MediaLib.RequestUserMedia", "UserMedia", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Episode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Episode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Episode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static Episode CreateEpisode(global::System.Int32 id, global::System.String name, global::System.Int32 seasonId, global::System.Int32 number)
        {
            Episode episode = new Episode();
            episode.Id = id;
            episode.Name = name;
            episode.SeasonId = seasonId;
            episode.Number = number;
            return episode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                OnSeasonIdChanging(value);
                ReportPropertyChanging("SeasonId");
                _SeasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeasonId");
                OnSeasonIdChanged();
            }
        }
        private global::System.Int32 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int32 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "EpisodeSeason", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("MediaLib.EpisodeSeason", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("MediaLib.EpisodeSeason", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("MediaLib.EpisodeSeason", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("MediaLib.EpisodeSeason", "Season", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "QuoteTV_ShowEpisode", "QuoteTV_Show")]
        public EntityCollection<QuoteTV_Show> QuoteTV_Show
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteTV_Show>("MediaLib.QuoteTV_ShowEpisode", "QuoteTV_Show");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteTV_Show>("MediaLib.QuoteTV_ShowEpisode", "QuoteTV_Show", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="InsertRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsertRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsertRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="requestDate">Initial value of the RequestDate property.</param>
        public static InsertRequest CreateInsertRequest(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime requestDate)
        {
            InsertRequest insertRequest = new InsertRequest();
            insertRequest.Id = id;
            insertRequest.UserId = userId;
            insertRequest.RequestDate = requestDate;
            return insertRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                OnRequestDateChanging(value);
                ReportPropertyChanging("RequestDate");
                _RequestDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestDate");
                OnRequestDateChanged();
            }
        }
        private global::System.DateTime _RequestDate;
        partial void OnRequestDateChanging(global::System.DateTime value);
        partial void OnRequestDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "InsertRequestMedia", "Media")]
        public Media Media
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("MediaLib.InsertRequestMedia", "Media").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("MediaLib.InsertRequestMedia", "Media").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Media> MediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("MediaLib.InsertRequestMedia", "Media");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Media>("MediaLib.InsertRequestMedia", "Media", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "InsertRequestUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.InsertRequestUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.InsertRequestUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.InsertRequestUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MediaLib.InsertRequestUser", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Media")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Video))]
    [KnownTypeAttribute(typeof(Book))]
    public abstract partial class Media : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalTitle
        {
            get
            {
                return _OriginalTitle;
            }
            set
            {
                OnOriginalTitleChanging(value);
                ReportPropertyChanging("OriginalTitle");
                _OriginalTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OriginalTitle");
                OnOriginalTitleChanged();
            }
        }
        private global::System.String _OriginalTitle;
        partial void OnOriginalTitleChanging(global::System.String value);
        partial void OnOriginalTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.Double _Rating = 0D;
        partial void OnRatingChanging(global::System.Double value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Genre
        {
            get
            {
                return _Genre;
            }
            set
            {
                OnGenreChanging(value);
                ReportPropertyChanging("Genre");
                _Genre = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Genre");
                OnGenreChanged();
            }
        }
        private global::System.String _Genre;
        partial void OnGenreChanging(global::System.String value);
        partial void OnGenreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Cover
        {
            get
            {
                return StructuralObject.GetValidValue(_Cover);
            }
            set
            {
                OnCoverChanging(value);
                ReportPropertyChanging("Cover");
                _Cover = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cover");
                OnCoverChanged();
            }
        }
        private global::System.Byte[] _Cover;
        partial void OnCoverChanging(global::System.Byte[] value);
        partial void OnCoverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Pending
        {
            get
            {
                return _Pending;
            }
            set
            {
                OnPendingChanging(value);
                ReportPropertyChanging("Pending");
                _Pending = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pending");
                OnPendingChanged();
            }
        }
        private global::System.Boolean _Pending = false;
        partial void OnPendingChanging(global::System.Boolean value);
        partial void OnPendingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalRaters
        {
            get
            {
                return _TotalRaters;
            }
            set
            {
                OnTotalRatersChanging(value);
                ReportPropertyChanging("TotalRaters");
                _TotalRaters = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalRaters");
                OnTotalRatersChanged();
            }
        }
        private global::System.Int32 _TotalRaters = 0;
        partial void OnTotalRatersChanging(global::System.Int32 value);
        partial void OnTotalRatersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AverageRating
        {
            get
            {
                return _AverageRating;
            }
            set
            {
                OnAverageRatingChanging(value);
                ReportPropertyChanging("AverageRating");
                _AverageRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AverageRating");
                OnAverageRatingChanged();
            }
        }
        private global::System.Double _AverageRating = 0D;
        partial void OnAverageRatingChanging(global::System.Double value);
        partial void OnAverageRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddingDate
        {
            get
            {
                return _AddingDate;
            }
            set
            {
                OnAddingDateChanging(value);
                ReportPropertyChanging("AddingDate");
                _AddingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddingDate");
                OnAddingDateChanged();
            }
        }
        private global::System.DateTime _AddingDate;
        partial void OnAddingDateChanging(global::System.DateTime value);
        partial void OnAddingDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "InsertRequestMedia", "InsertRequest")]
        public InsertRequest InsertRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsertRequest>("MediaLib.InsertRequestMedia", "InsertRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsertRequest>("MediaLib.InsertRequestMedia", "InsertRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InsertRequest> InsertRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsertRequest>("MediaLib.InsertRequestMedia", "InsertRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InsertRequest>("MediaLib.InsertRequestMedia", "InsertRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "QuoteMedia", "Quote")]
        public EntityCollection<Quote> Quote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Quote>("MediaLib.QuoteMedia", "Quote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Quote>("MediaLib.QuoteMedia", "Quote", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Movie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Movie : Video
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Movie object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="addingDate">Initial value of the AddingDate property.</param>
        /// <param name="releaseDate">Initial value of the ReleaseDate property.</param>
        public static Movie CreateMovie(global::System.Int32 id, global::System.String title, global::System.DateTime addingDate, global::System.DateTime releaseDate)
        {
            Movie movie = new Movie();
            movie.Id = id;
            movie.Title = title;
            movie.AddingDate = addingDate;
            movie.ReleaseDate = releaseDate;
            return movie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReleaseDate
        {
            get
            {
                return _ReleaseDate;
            }
            set
            {
                OnReleaseDateChanging(value);
                ReportPropertyChanging("ReleaseDate");
                _ReleaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleaseDate");
                OnReleaseDateChanged();
            }
        }
        private global::System.DateTime _ReleaseDate;
        partial void OnReleaseDateChanging(global::System.DateTime value);
        partial void OnReleaseDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "BookMovie", "Book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("MediaLib.BookMovie", "Book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("MediaLib.BookMovie", "Book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("MediaLib.BookMovie", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("MediaLib.BookMovie", "Book", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "QuoteMovieMovie", "QuoteMovie")]
        public EntityCollection<QuoteMovie> QuoteMovie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteMovie>("MediaLib.QuoteMovieMovie", "QuoteMovie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteMovie>("MediaLib.QuoteMovieMovie", "QuoteMovie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "UserMovieMovie", "UserMovie")]
        public EntityCollection<UserMovie> UserMovie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMovie>("MediaLib.UserMovieMovie", "UserMovie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMovie>("MediaLib.UserMovieMovie", "UserMovie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Actor))]
    [KnownTypeAttribute(typeof(Author))]
    public abstract partial class Person : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Quote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(QuoteMovie))]
    [KnownTypeAttribute(typeof(QuoteTV_Show))]
    [KnownTypeAttribute(typeof(QuoteBook))]
    public abstract partial class Quote : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuoteString
        {
            get
            {
                return _QuoteString;
            }
            set
            {
                OnQuoteStringChanging(value);
                ReportPropertyChanging("QuoteString");
                _QuoteString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QuoteString");
                OnQuoteStringChanged();
            }
        }
        private global::System.String _QuoteString;
        partial void OnQuoteStringChanging(global::System.String value);
        partial void OnQuoteStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Invocations
        {
            get
            {
                return _Invocations;
            }
            set
            {
                OnInvocationsChanging(value);
                ReportPropertyChanging("Invocations");
                _Invocations = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Invocations");
                OnInvocationsChanged();
            }
        }
        private global::System.Int32 _Invocations = 0;
        partial void OnInvocationsChanging(global::System.Int32 value);
        partial void OnInvocationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MediaId
        {
            get
            {
                return _MediaId;
            }
            set
            {
                OnMediaIdChanging(value);
                ReportPropertyChanging("MediaId");
                _MediaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MediaId");
                OnMediaIdChanged();
            }
        }
        private global::System.Int32 _MediaId;
        partial void OnMediaIdChanging(global::System.Int32 value);
        partial void OnMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Character
        {
            get
            {
                return _Character;
            }
            set
            {
                OnCharacterChanging(value);
                ReportPropertyChanging("Character");
                _Character = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Character");
                OnCharacterChanged();
            }
        }
        private global::System.String _Character;
        partial void OnCharacterChanging(global::System.String value);
        partial void OnCharacterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OccurenceTime
        {
            get
            {
                return _OccurenceTime;
            }
            set
            {
                OnOccurenceTimeChanging(value);
                ReportPropertyChanging("OccurenceTime");
                _OccurenceTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OccurenceTime");
                OnOccurenceTimeChanged();
            }
        }
        private global::System.String _OccurenceTime;
        partial void OnOccurenceTimeChanging(global::System.String value);
        partial void OnOccurenceTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ranking
        {
            get
            {
                return _Ranking;
            }
            set
            {
                OnRankingChanging(value);
                ReportPropertyChanging("Ranking");
                _Ranking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ranking");
                OnRankingChanged();
            }
        }
        private Nullable<global::System.Int32> _Ranking;
        partial void OnRankingChanging(Nullable<global::System.Int32> value);
        partial void OnRankingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "QuoteMedia", "Media")]
        public Media Media
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("MediaLib.QuoteMedia", "Media").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("MediaLib.QuoteMedia", "Media").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Media> MediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("MediaLib.QuoteMedia", "Media");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Media>("MediaLib.QuoteMedia", "Media", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "QuoteUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.QuoteUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.QuoteUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.QuoteUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MediaLib.QuoteUser", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="QuoteBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuoteBook : Quote
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuoteBook object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quoteString">Initial value of the QuoteString property.</param>
        /// <param name="language">Initial value of the Language property.</param>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="character">Initial value of the Character property.</param>
        /// <param name="bookId">Initial value of the BookId property.</param>
        public static QuoteBook CreateQuoteBook(global::System.Int32 id, global::System.String quoteString, global::System.String language, global::System.Int32 mediaId, global::System.Int32 userId, global::System.String character, global::System.Int32 bookId)
        {
            QuoteBook quoteBook = new QuoteBook();
            quoteBook.Id = id;
            quoteBook.QuoteString = quoteString;
            quoteBook.Language = language;
            quoteBook.MediaId = mediaId;
            quoteBook.UserId = userId;
            quoteBook.Character = character;
            quoteBook.BookId = bookId;
            return quoteBook;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "QuoteBookBook", "Book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("MediaLib.QuoteBookBook", "Book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("MediaLib.QuoteBookBook", "Book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("MediaLib.QuoteBookBook", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("MediaLib.QuoteBookBook", "Book", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="QuoteMovie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuoteMovie : Quote
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuoteMovie object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quoteString">Initial value of the QuoteString property.</param>
        /// <param name="language">Initial value of the Language property.</param>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="character">Initial value of the Character property.</param>
        /// <param name="movieId">Initial value of the MovieId property.</param>
        public static QuoteMovie CreateQuoteMovie(global::System.Int32 id, global::System.String quoteString, global::System.String language, global::System.Int32 mediaId, global::System.Int32 userId, global::System.String character, global::System.Int32 movieId)
        {
            QuoteMovie quoteMovie = new QuoteMovie();
            quoteMovie.Id = id;
            quoteMovie.QuoteString = quoteString;
            quoteMovie.Language = language;
            quoteMovie.MediaId = mediaId;
            quoteMovie.UserId = userId;
            quoteMovie.Character = character;
            quoteMovie.MovieId = movieId;
            return quoteMovie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieId
        {
            get
            {
                return _MovieId;
            }
            set
            {
                OnMovieIdChanging(value);
                ReportPropertyChanging("MovieId");
                _MovieId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieId");
                OnMovieIdChanged();
            }
        }
        private global::System.Int32 _MovieId;
        partial void OnMovieIdChanging(global::System.Int32 value);
        partial void OnMovieIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "QuoteMovieMovie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("MediaLib.QuoteMovieMovie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("MediaLib.QuoteMovieMovie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("MediaLib.QuoteMovieMovie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("MediaLib.QuoteMovieMovie", "Movie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="QuoteTV_Show")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuoteTV_Show : Quote
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuoteTV_Show object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quoteString">Initial value of the QuoteString property.</param>
        /// <param name="language">Initial value of the Language property.</param>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="character">Initial value of the Character property.</param>
        /// <param name="episodeId">Initial value of the EpisodeId property.</param>
        public static QuoteTV_Show CreateQuoteTV_Show(global::System.Int32 id, global::System.String quoteString, global::System.String language, global::System.Int32 mediaId, global::System.Int32 userId, global::System.String character, global::System.Int32 episodeId)
        {
            QuoteTV_Show quoteTV_Show = new QuoteTV_Show();
            quoteTV_Show.Id = id;
            quoteTV_Show.QuoteString = quoteString;
            quoteTV_Show.Language = language;
            quoteTV_Show.MediaId = mediaId;
            quoteTV_Show.UserId = userId;
            quoteTV_Show.Character = character;
            quoteTV_Show.EpisodeId = episodeId;
            return quoteTV_Show;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EpisodeId
        {
            get
            {
                return _EpisodeId;
            }
            set
            {
                OnEpisodeIdChanging(value);
                ReportPropertyChanging("EpisodeId");
                _EpisodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EpisodeId");
                OnEpisodeIdChanged();
            }
        }
        private global::System.Int32 _EpisodeId;
        partial void OnEpisodeIdChanging(global::System.Int32 value);
        partial void OnEpisodeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "QuoteTV_ShowEpisode", "Episode")]
        public Episode Episode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Episode>("MediaLib.QuoteTV_ShowEpisode", "Episode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Episode>("MediaLib.QuoteTV_ShowEpisode", "Episode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Episode> EpisodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Episode>("MediaLib.QuoteTV_ShowEpisode", "Episode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Episode>("MediaLib.QuoteTV_ShowEpisode", "Episode", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Season")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Season : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Season object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="tV_ShowId">Initial value of the TV_ShowId property.</param>
        public static Season CreateSeason(global::System.Int32 id, global::System.Int32 number, global::System.Int32 tV_ShowId)
        {
            Season season = new Season();
            season.Id = id;
            season.Number = number;
            season.TV_ShowId = tV_ShowId;
            return season;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TV_ShowId
        {
            get
            {
                return _TV_ShowId;
            }
            set
            {
                OnTV_ShowIdChanging(value);
                ReportPropertyChanging("TV_ShowId");
                _TV_ShowId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TV_ShowId");
                OnTV_ShowIdChanged();
            }
        }
        private global::System.Int32 _TV_ShowId;
        partial void OnTV_ShowIdChanging(global::System.Int32 value);
        partial void OnTV_ShowIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "TV_ShowSeason", "TV_Show")]
        public TV_Show TV_Show
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TV_Show>("MediaLib.TV_ShowSeason", "TV_Show").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TV_Show>("MediaLib.TV_ShowSeason", "TV_Show").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TV_Show> TV_ShowReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TV_Show>("MediaLib.TV_ShowSeason", "TV_Show");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TV_Show>("MediaLib.TV_ShowSeason", "TV_Show", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "EpisodeSeason", "Episode")]
        public EntityCollection<Episode> Episode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Episode>("MediaLib.EpisodeSeason", "Episode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Episode>("MediaLib.EpisodeSeason", "Episode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "UserTV_ShowSeason", "UserTV_Show")]
        public EntityCollection<UserTV_Show> UserTV_Show
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTV_Show>("MediaLib.UserTV_ShowSeason", "UserTV_Show");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTV_Show>("MediaLib.UserTV_ShowSeason", "UserTV_Show", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="TV_Show")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TV_Show : Video
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TV_Show object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="addingDate">Initial value of the AddingDate property.</param>
        /// <param name="showBeginning">Initial value of the ShowBeginning property.</param>
        public static TV_Show CreateTV_Show(global::System.Int32 id, global::System.String title, global::System.DateTime addingDate, global::System.DateTime showBeginning)
        {
            TV_Show tV_Show = new TV_Show();
            tV_Show.Id = id;
            tV_Show.Title = title;
            tV_Show.AddingDate = addingDate;
            tV_Show.ShowBeginning = showBeginning;
            return tV_Show;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ShowBeginning
        {
            get
            {
                return _ShowBeginning;
            }
            set
            {
                OnShowBeginningChanging(value);
                ReportPropertyChanging("ShowBeginning");
                _ShowBeginning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowBeginning");
                OnShowBeginningChanged();
            }
        }
        private global::System.DateTime _ShowBeginning;
        partial void OnShowBeginningChanging(global::System.DateTime value);
        partial void OnShowBeginningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ShowEnding
        {
            get
            {
                return _ShowEnding;
            }
            set
            {
                OnShowEndingChanging(value);
                ReportPropertyChanging("ShowEnding");
                _ShowEnding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowEnding");
                OnShowEndingChanged();
            }
        }
        private Nullable<global::System.DateTime> _ShowEnding;
        partial void OnShowEndingChanging(Nullable<global::System.DateTime> value);
        partial void OnShowEndingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "TV_ShowSeason", "Season")]
        public EntityCollection<Season> Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Season>("MediaLib.TV_ShowSeason", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Season>("MediaLib.TV_ShowSeason", "Season", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Admin))]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="verified">Initial value of the Verified property.</param>
        /// <param name="closed">Initial value of the Closed property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.String password, global::System.Boolean verified, global::System.Boolean closed)
        {
            User user = new User();
            user.Id = id;
            user.Username = username;
            user.Password = password;
            user.Verified = verified;
            user.Closed = closed;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Verified
        {
            get
            {
                return _Verified;
            }
            set
            {
                OnVerifiedChanging(value);
                ReportPropertyChanging("Verified");
                _Verified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Verified");
                OnVerifiedChanged();
            }
        }
        private global::System.Boolean _Verified;
        partial void OnVerifiedChanging(global::System.Boolean value);
        partial void OnVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Closed
        {
            get
            {
                return _Closed;
            }
            set
            {
                OnClosedChanging(value);
                ReportPropertyChanging("Closed");
                _Closed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Closed");
                OnClosedChanged();
            }
        }
        private global::System.Boolean _Closed;
        partial void OnClosedChanging(global::System.Boolean value);
        partial void OnClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VerificationCode
        {
            get
            {
                return _VerificationCode;
            }
            set
            {
                OnVerificationCodeChanging(value);
                ReportPropertyChanging("VerificationCode");
                _VerificationCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VerificationCode");
                OnVerificationCodeChanged();
            }
        }
        private global::System.String _VerificationCode = "\'notSet\'";
        partial void OnVerificationCodeChanging(global::System.String value);
        partial void OnVerificationCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "UserUserMedien", "UserMedien")]
        public EntityCollection<UserMedia> UserMedien
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMedia>("MediaLib.UserUserMedien", "UserMedien");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMedia>("MediaLib.UserUserMedien", "UserMedien", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "RequestUser", "BorrowRequest")]
        public EntityCollection<BorrowRequest> BorrowRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BorrowRequest>("MediaLib.RequestUser", "BorrowRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BorrowRequest>("MediaLib.RequestUser", "BorrowRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "InsertRequestUser", "InsertRequest")]
        public EntityCollection<InsertRequest> InsertRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsertRequest>("MediaLib.InsertRequestUser", "InsertRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsertRequest>("MediaLib.InsertRequestUser", "InsertRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "UserUser", "User")]
        public EntityCollection<User> Friends
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("MediaLib.UserUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("MediaLib.UserUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "BorrowedDetailsUser", "BorrowedDetails")]
        public EntityCollection<BorrowedDetails> BorrowedDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BorrowedDetails>("MediaLib.BorrowedDetailsUser", "BorrowedDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BorrowedDetails>("MediaLib.BorrowedDetailsUser", "BorrowedDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "QuoteUser", "Quote")]
        public EntityCollection<Quote> Quote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Quote>("MediaLib.QuoteUser", "Quote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Quote>("MediaLib.QuoteUser", "Quote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "UserUser1", "User1")]
        public EntityCollection<User> Requestlist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("MediaLib.UserUser1", "User1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("MediaLib.UserUser1", "User1", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="UserBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserBook : UserMedia
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserBook object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="storagePlace">Initial value of the StoragePlace property.</param>
        /// <param name="mediaStatus">Initial value of the MediaStatus property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="bookId">Initial value of the BookId property.</param>
        public static UserBook CreateUserBook(global::System.Int32 id, global::System.String storagePlace, global::System.String mediaStatus, global::System.Int32 userId, global::System.Int32 bookId)
        {
            UserBook userBook = new UserBook();
            userBook.Id = id;
            userBook.StoragePlace = storagePlace;
            userBook.MediaStatus = mediaStatus;
            userBook.UserId = userId;
            userBook.BookId = bookId;
            return userBook;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "UserBooksBook", "Book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("MediaLib.UserBooksBook", "Book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("MediaLib.UserBooksBook", "Book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("MediaLib.UserBooksBook", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("MediaLib.UserBooksBook", "Book", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="UserMedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(UserBook))]
    [KnownTypeAttribute(typeof(UserVideo))]
    public partial class UserMedia : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserMedia object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="storagePlace">Initial value of the StoragePlace property.</param>
        /// <param name="mediaStatus">Initial value of the MediaStatus property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserMedia CreateUserMedia(global::System.Int32 id, global::System.String storagePlace, global::System.String mediaStatus, global::System.Int32 userId)
        {
            UserMedia userMedia = new UserMedia();
            userMedia.Id = id;
            userMedia.StoragePlace = storagePlace;
            userMedia.MediaStatus = mediaStatus;
            userMedia.UserId = userId;
            return userMedia;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoragePlace
        {
            get
            {
                return _StoragePlace;
            }
            set
            {
                OnStoragePlaceChanging(value);
                ReportPropertyChanging("StoragePlace");
                _StoragePlace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoragePlace");
                OnStoragePlaceChanged();
            }
        }
        private global::System.String _StoragePlace;
        partial void OnStoragePlaceChanging(global::System.String value);
        partial void OnStoragePlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaStatus
        {
            get
            {
                return _MediaStatus;
            }
            set
            {
                OnMediaStatusChanging(value);
                ReportPropertyChanging("MediaStatus");
                _MediaStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaStatus");
                OnMediaStatusChanged();
            }
        }
        private global::System.String _MediaStatus;
        partial void OnMediaStatusChanging(global::System.String value);
        partial void OnMediaStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "UserUserMedien", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.UserUserMedien", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.UserUserMedien", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaLib.UserUserMedien", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MediaLib.UserUserMedien", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "RequestUserMedia", "BorrowRequest")]
        public EntityCollection<BorrowRequest> BorrowRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BorrowRequest>("MediaLib.RequestUserMedia", "BorrowRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BorrowRequest>("MediaLib.RequestUserMedia", "BorrowRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "BorrowedDetailsUserMedia", "BorrowedDetails")]
        public EntityCollection<BorrowedDetails> BorrowedDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BorrowedDetails>("MediaLib.BorrowedDetailsUserMedia", "BorrowedDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BorrowedDetails>("MediaLib.BorrowedDetailsUserMedia", "BorrowedDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="UserMovie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserMovie : UserVideo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserMovie object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="storagePlace">Initial value of the StoragePlace property.</param>
        /// <param name="mediaStatus">Initial value of the MediaStatus property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="movieId">Initial value of the MovieId property.</param>
        public static UserMovie CreateUserMovie(global::System.Int32 id, global::System.String storagePlace, global::System.String mediaStatus, global::System.Int32 userId, global::System.Int32 movieId)
        {
            UserMovie userMovie = new UserMovie();
            userMovie.Id = id;
            userMovie.StoragePlace = storagePlace;
            userMovie.MediaStatus = mediaStatus;
            userMovie.UserId = userId;
            userMovie.MovieId = movieId;
            return userMovie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieId
        {
            get
            {
                return _MovieId;
            }
            set
            {
                OnMovieIdChanging(value);
                ReportPropertyChanging("MovieId");
                _MovieId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieId");
                OnMovieIdChanged();
            }
        }
        private global::System.Int32 _MovieId;
        partial void OnMovieIdChanging(global::System.Int32 value);
        partial void OnMovieIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "UserMovieMovie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("MediaLib.UserMovieMovie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("MediaLib.UserMovieMovie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("MediaLib.UserMovieMovie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("MediaLib.UserMovieMovie", "Movie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="UserTV_Show")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserTV_Show : UserVideo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserTV_Show object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="storagePlace">Initial value of the StoragePlace property.</param>
        /// <param name="mediaStatus">Initial value of the MediaStatus property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        public static UserTV_Show CreateUserTV_Show(global::System.Int32 id, global::System.String storagePlace, global::System.String mediaStatus, global::System.Int32 userId, global::System.Int32 seasonId)
        {
            UserTV_Show userTV_Show = new UserTV_Show();
            userTV_Show.Id = id;
            userTV_Show.StoragePlace = storagePlace;
            userTV_Show.MediaStatus = mediaStatus;
            userTV_Show.UserId = userId;
            userTV_Show.SeasonId = seasonId;
            return userTV_Show;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                OnSeasonIdChanging(value);
                ReportPropertyChanging("SeasonId");
                _SeasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeasonId");
                OnSeasonIdChanged();
            }
        }
        private global::System.Int32 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int32 value);
        partial void OnSeasonIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "UserTV_ShowSeason", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("MediaLib.UserTV_ShowSeason", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("MediaLib.UserTV_ShowSeason", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("MediaLib.UserTV_ShowSeason", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("MediaLib.UserTV_ShowSeason", "Season", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="UserVideo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(UserMovie))]
    [KnownTypeAttribute(typeof(UserTV_Show))]
    public abstract partial class UserVideo : UserMedia
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StorageType
        {
            get
            {
                return _StorageType;
            }
            set
            {
                OnStorageTypeChanging(value);
                ReportPropertyChanging("StorageType");
                _StorageType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StorageType");
                OnStorageTypeChanged();
            }
        }
        private global::System.String _StorageType;
        partial void OnStorageTypeChanging(global::System.String value);
        partial void OnStorageTypeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaLib", Name="Video")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(TV_Show))]
    [KnownTypeAttribute(typeof(Movie))]
    public abstract partial class Video : Media
    {
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaLib", "ActorVideo", "Actor")]
        public EntityCollection<Actor> Actor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actor>("MediaLib.ActorVideo", "Actor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actor>("MediaLib.ActorVideo", "Actor", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
